{"ast":null,"code":"// import {createStore} from 'redux';\n// import Cookies from 'js-cookie';\n//\n// const authReducer = (state = {isLoggedIn : false}, action) => {\n//   if(action.type === 'login'){\n//     Cookies.set('information-hub-cookie', true, { expires: 2 });\n//     return {\n//       isLoggedIn: true,\n//     };\n//   }\n//   else if(action.type === 'logout'){\n//     Cookies.remove('information-hub-cookie');\n//     return {\n//       isLoggedIn: false,\n//     };\n//   }\n//\n//   return state;\n// }\n//\n// const store = createStore(authReducer);\n//\n// export default store;\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialAuthState = {\n  isLoggedIn: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      Cookies.set('information-hub-cookie', true, {\n        expires: 2\n      });\n      state.isLoggedIn = true;\n    },\n\n    logout(state) {\n      Cookies.remove('information-hub-cookie');\n      state.isLoggedIn = false;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"sources":["/Users/kottedheeru/Documents/InformationHubFrontend/src/store/index.js"],"names":["createSlice","configureStore","initialAuthState","isLoggedIn","authSlice","name","initialState","reducers","login","state","Cookies","set","expires","logout","remove","store","reducer","counter","counterSlice","auth","counterActions","actions","authActions"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,UAAU,EAAE;AADW,CAAzB;AAIA,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AAC5BK,EAAAA,IAAI,EAAE,gBADsB;AAE5BC,EAAAA,YAAY,EAAEJ,gBAFc;AAG5BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,CAACC,KAAD,EAAQ;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsC,IAAtC,EAA4C;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAA5C;AACAH,MAAAA,KAAK,CAACN,UAAN,GAAmB,IAAnB;AACD,KAJO;;AAKRU,IAAAA,MAAM,CAACJ,KAAD,EAAQ;AACZC,MAAAA,OAAO,CAACI,MAAR,CAAe,wBAAf;AACAL,MAAAA,KAAK,CAACN,UAAN,GAAmB,KAAnB;AACD;;AARO;AAHkB,CAAD,CAA7B;AAeA,MAAMY,KAAK,GAAGd,cAAc,CAAC;AAC3Be,EAAAA,OAAO,EAAE;AAAEC,IAAAA,OAAO,EAAEC,YAAY,CAACF,OAAxB;AAAiCG,IAAAA,IAAI,EAAEf,SAAS,CAACY;AAAjD;AADkB,CAAD,CAA5B;AAIA,OAAO,MAAMI,cAAc,GAAGF,YAAY,CAACG,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGlB,SAAS,CAACiB,OAA9B;AAEP,eAAeN,KAAf","sourcesContent":["// import {createStore} from 'redux';\n// import Cookies from 'js-cookie';\n//\n// const authReducer = (state = {isLoggedIn : false}, action) => {\n//   if(action.type === 'login'){\n//     Cookies.set('information-hub-cookie', true, { expires: 2 });\n//     return {\n//       isLoggedIn: true,\n//     };\n//   }\n//   else if(action.type === 'logout'){\n//     Cookies.remove('information-hub-cookie');\n//     return {\n//       isLoggedIn: false,\n//     };\n//   }\n//\n//   return state;\n// }\n//\n// const store = createStore(authReducer);\n//\n// export default store;\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\n\nconst initialAuthState = {\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      Cookies.set('information-hub-cookie', true, { expires: 2 });\n      state.isLoggedIn = true;\n    },\n    logout(state) {\n      Cookies.remove('information-hub-cookie');\n      state.isLoggedIn = false;\n    },\n  },\n});\n\nconst store = configureStore({\n  reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\n});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}