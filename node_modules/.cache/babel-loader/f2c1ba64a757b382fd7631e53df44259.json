{"ast":null,"code":"// import {createStore} from 'redux';\n// import Cookies from 'js-cookie';\n//\n// const authReducer = (state = {isLoggedIn : false}, action) => {\n//   if(action.type === 'login'){\n//     Cookies.set('information-hub-cookie', true, { expires: 2 });\n//     return {\n//       isLoggedIn: true,\n//     };\n//   }\n//   else if(action.type === 'logout'){\n//     Cookies.remove('information-hub-cookie');\n//     return {\n//       isLoggedIn: false,\n//     };\n//   }\n//\n//   return state;\n// }\n//\n// const store = createStore(authReducer);\n//\n// export default store;\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nimport Cookies from 'js-cookie';\nconst initialAuthState = {\n  isLoggedIn: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state, action) {\n      console.log(action.payload);\n      var loginDetails = {\n        username: action.payload,\n        isLoggedIn: true\n      };\n      Cookies.set('information-hub-cookie', JSON.stringify(loginDetails), {\n        expires: 2\n      });\n      state.isLoggedIn = true;\n    },\n\n    logout(state) {\n      Cookies.remove('information-hub-cookie');\n      state.isLoggedIn = false;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    auth: authSlice.reducer\n  }\n});\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"sources":["/Users/kottedheeru/Documents/InformationHubFrontend/src/store/index.js"],"names":["createSlice","configureStore","Cookies","initialAuthState","isLoggedIn","authSlice","name","initialState","reducers","login","state","action","console","log","payload","loginDetails","username","set","JSON","stringify","expires","logout","remove","store","reducer","auth","authActions","actions"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,UAAU,EAAE;AADW,CAAzB;AAIA,MAAMC,SAAS,GAAGL,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAE,gBADsB;AAE5BC,EAAAA,YAAY,EAAEJ,gBAFc;AAG5BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,CAACC,KAAD,EAAOC,MAAP,EAAe;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,OAAnB;AACA,UAAIC,YAAY,GAAG;AACjBC,QAAAA,QAAQ,EAAEL,MAAM,CAACG,OADA;AAEjBV,QAAAA,UAAU,EAAE;AAFK,OAAnB;AAIAF,MAAAA,OAAO,CAACe,GAAR,CAAY,wBAAZ,EAAsCC,IAAI,CAACC,SAAL,CAAeJ,YAAf,CAAtC,EAAoE;AAAEK,QAAAA,OAAO,EAAE;AAAX,OAApE;AACAV,MAAAA,KAAK,CAACN,UAAN,GAAmB,IAAnB;AACD,KATO;;AAURiB,IAAAA,MAAM,CAACX,KAAD,EAAQ;AACZR,MAAAA,OAAO,CAACoB,MAAR,CAAe,wBAAf;AACAZ,MAAAA,KAAK,CAACN,UAAN,GAAmB,KAAnB;AACD;;AAbO;AAHkB,CAAD,CAA7B;AAoBA,MAAMmB,KAAK,GAAGtB,cAAc,CAAC;AAC3BuB,EAAAA,OAAO,EAAE;AAAEC,IAAAA,IAAI,EAAEpB,SAAS,CAACmB;AAAlB;AADkB,CAAD,CAA5B;AAIA,OAAO,MAAME,WAAW,GAAGrB,SAAS,CAACsB,OAA9B;AAEP,eAAeJ,KAAf","sourcesContent":["// import {createStore} from 'redux';\n// import Cookies from 'js-cookie';\n//\n// const authReducer = (state = {isLoggedIn : false}, action) => {\n//   if(action.type === 'login'){\n//     Cookies.set('information-hub-cookie', true, { expires: 2 });\n//     return {\n//       isLoggedIn: true,\n//     };\n//   }\n//   else if(action.type === 'logout'){\n//     Cookies.remove('information-hub-cookie');\n//     return {\n//       isLoggedIn: false,\n//     };\n//   }\n//\n//   return state;\n// }\n//\n// const store = createStore(authReducer);\n//\n// export default store;\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nimport Cookies from 'js-cookie';\n\nconst initialAuthState = {\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state,action) {\n      console.log(action.payload);\n      var loginDetails = {\n        username: action.payload,\n        isLoggedIn: true\n      }\n      Cookies.set('information-hub-cookie', JSON.stringify(loginDetails), { expires: 2 });\n      state.isLoggedIn = true;\n    },\n    logout(state) {\n      Cookies.remove('information-hub-cookie');\n      state.isLoggedIn = false;\n    },\n  },\n});\n\nconst store = configureStore({\n  reducer: { auth: authSlice.reducer },\n});\n\nexport const authActions = authSlice.actions;\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}