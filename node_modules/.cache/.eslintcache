[{"/Users/kottedheeru/Documents/InformationHubFrontend/src/index.js":"1","/Users/kottedheeru/Documents/InformationHubFrontend/src/store/index.js":"2","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/App.jsx":"3","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoMain.js":"4","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Navbar.jsx":"5","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Login.jsx":"6","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Intro.jsx":"7","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Info.jsx":"8","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Contact.jsx":"9","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/IntroImg.jsx":"10","/Users/kottedheeru/Documents/InformationHubFrontend/src/config/auth.js":"11","/Users/kottedheeru/Documents/InformationHubFrontend/src/config/authMethods.js":"12","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Logo.jsx":"13","/Users/kottedheeru/Documents/InformationHubFrontend/src/config/firebase-config.js":"14"},{"size":279,"mtime":1629909748000,"results":"15","hashOfConfig":"16"},{"size":492,"mtime":1629909748000,"results":"17","hashOfConfig":"16"},{"size":2412,"mtime":1629909748000,"results":"18","hashOfConfig":"16"},{"size":135,"mtime":1629909748000,"results":"19","hashOfConfig":"16"},{"size":2282,"mtime":1629909748000,"results":"20","hashOfConfig":"16"},{"size":9444,"mtime":1629971113658,"results":"21","hashOfConfig":"16"},{"size":686,"mtime":1629909748000,"results":"22","hashOfConfig":"16"},{"size":757,"mtime":1629909748000,"results":"23","hashOfConfig":"16"},{"size":694,"mtime":1629909748000,"results":"24","hashOfConfig":"16"},{"size":48360,"mtime":1629909748000,"results":"25","hashOfConfig":"16"},{"size":246,"mtime":1629909748000,"results":"26","hashOfConfig":"16"},{"size":386,"mtime":1629971440893,"results":"27","hashOfConfig":"16"},{"size":4451,"mtime":1629909748000,"results":"28","hashOfConfig":"16"},{"size":460,"mtime":1629971680565,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"8dppxe",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":3,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kottedheeru/Documents/InformationHubFrontend/src/index.js",[],["63","64"],"/Users/kottedheeru/Documents/InformationHubFrontend/src/store/index.js",[],"/Users/kottedheeru/Documents/InformationHubFrontend/src/components/App.jsx",["65"],"import React, {useEffect} from 'react';\nimport Navbar from './Navbar';\nimport Intro from './Intro';\nimport Info from './Info';\nimport Tab from './Login';\nimport Contact from './Contact';\nimport {BrowserRouter as Router ,Switch ,Route} from 'react-router-dom';\nimport InfoMain from './InfoMain';\nimport Cookies from 'js-cookie';\nimport {useSelector, useDispatch} from 'react-redux';\n\nfunction App(){\n  // const [isLoggedIn,setIsLoggedIn] = useState(false);\n  const isLoggedIn = useSelector(state => state.isLoggedIn);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n        let state = Cookies.get('information-hub-cookie');\n        if(state){\n          dispatch({type:'login'});\n        }\n    }, []);\n\n\n\n  // const loginHandler = (value) => {\n  //     if(value === true){\n  //       Cookies.set('information-hub-cookie', true, { expires: 2 });\n  //       setIsLoggedIn(true);\n  //     }\n  // }\n  //\n  // const logoutHandler = () => {\n  //     Cookies.remove('information-hub-cookie');\n  //     setIsLoggedIn(false);\n  // };\n\n  return (\n    <Router>\n        <Switch>\n            <div className=\"\" style={{position:\"absolute\",left:\"0\",right:\"0\"}}>\n                  <div class=\"navbar-container\">\n                      <Navbar />\n                  </div>\n\n                  <div class=\"container-fluid information-part\">\n                      <Route path = \"/\" exact>\n                           {!isLoggedIn && <Intro />}\n                           {isLoggedIn && <InfoMain />}\n                       </Route>\n                  </div>\n\n                  <div class=\"container-fluid\">\n                      <Route path = \"/\" exact>\n                          {!isLoggedIn && <Info />}\n                      </Route>\n                  </div>\n\n                  {!isLoggedIn && <h2 style={{fontFamily: \"'Alata', sans-serif\",textAlign:\"center\",fontSize:\"3rem\",paddingTop:\"2rem\"}}>Many More ...</h2>}\n                  <div className=\"container-fluid\" id = \"login\" style = {{marginTop:\"7rem\",display: \"flex\",justifyContent: \"center\",alignItems: \"center\"}}>\n                      <Route path = \"/\" exact>\n                          {!isLoggedIn && <Tab />}\n                      </Route>\n                  </div>\n\n                  <div class=\"\" id = \"bottom-section\">\n                       <Contact />\n                  </div>\n           </div>\n        </Switch>\n    </Router>\n         );\n\n}\n\nexport default App;\n","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoMain.js",[],"/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Navbar.jsx",["66","67","68","69","70","71"],"import React from 'react';\nimport Logo from './Logo';\nimport {useSelector, useDispatch} from 'react-redux';\n\nfunction Navbar(){\n  const isLoggedIn = useSelector(state => state.isLoggedIn);\n  const dispatch = useDispatch();\n  let logoutHandler = () => {\n    dispatch({type:'logout'});\n  }\n\n  return (<nav class=\"navbar navbar-expand-lg navbar-light\" style={{backgroundColor:\"white\"}}>\n        <a class=\"navbar-brand\" href=\"#\" style={{fontFamily: \"'Pacifico', cursive\",fontSize:\"2.2rem\"}}><Logo /><span style={{color:\"#6a197d\"}}>Information Hub</span></a>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul class=\"navbar-nav ml-auto\" style={{textAlign:\"center\"}}>\n            <li class=\"nav-item active\">\n              <a class=\"nav-link\" href=\"#\"><button type=\"button\" className=\"nav-button\">About</button> <span class=\"sr-only\">(current)</span></a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#bottom-section\" ><button type=\"button\" className=\"nav-button\">Contact</button></a>\n            </li>\n            <li class=\"nav-item\">\n              {!isLoggedIn && <a class=\"nav-link\" href=\"#login\"><button type=\"button\" className=\"nav-button\">Login/Signup</button></a>}\n              {isLoggedIn  && <div class=\"btn-group\">\n                <a type=\"button\" class=\"nav-link\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                   <button type=\"button\" className=\"nav-button dropdown-toggle\"><i class=\"fas fa-user\" style={{paddingRight:\"1rem\"}}></i></button>\n                </a>\n                <div class=\"dropdown-menu\">\n                  <a class=\"dropdown-item\" href=\"#\">User</a>\n                  <a class=\"dropdown-item\" href=\"#\">Another action</a>\n                  <a class=\"dropdown-item\" href=\"#\" onClick={logoutHandler}>logout</a>\n                </div>\n              </div>\n              }\n            </li>\n          </ul>\n        </div>\n      </nav>);\n\n}\n\nexport default Navbar;\n","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Login.jsx",["72","73","74","75","76","77"],"import React ,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport {useDispatch} from 'react-redux';\nimport GoogleLogin from 'react-google-login';\nimport GitHubLogin from 'react-login-github';\nimport Cookies from 'js-cookie';\nimport socialMediaAuth from '../config/auth';\nimport {googleProvider,githubProvider,microsoftProvider} from '../config/authMethods';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 1000,\n    outline:null\n  },\n}));\n\nexport default function FullWidthTabs(props) {\n  const dispatch = useDispatch();\n  const [alert_1,changeAlert_1] = useState('');\n  const [alert_2,changeAlert_2] = useState('');\n  const [alert_3,changeAlert_3] = useState('');\n  const [alert_4,changeAlert_4] = useState('');\n\n\n\n  function validatePassword(event) {\n     var str = event.target.value;\n     var res;\n     if (str.match(/[a-z]/g) && str.match(/[A-Z]/g) && str.match(/[0-9]/g) && str.match(/[^a-zA-Z\\d]/g) && str.length >= 8)\n         res = 1;\n     else\n         res = 0;\n\n    if((event.target.name.charAt(event.target.name.length-1))==='1')\n    {   if(res === 1){\n          changeAlert_2(\"\");\n        }\n        else{\n          changeAlert_2(\"* weak password A password is correct if it contains: 1) At least 1 uppercase character.2) At least 1 lowercase character.3) At least 1 digit.4) At least 1 special character.5) Minimum 8 characters.\");\n          if(str===\"\"){\n             changeAlert_2(\"\");\n          }\n        }\n    }\n    else{\n        if(res === 1){\n            changeAlert_4(\"\");\n        }\n        else{\n          changeAlert_4(\"* invalid password \");\n          if(str===\"\"){\n             changeAlert_4(\"\");\n          }\n        }\n    }\n\n\n  }\n\n\n  function validateEmail(event)\n  {\n    var str = event.target.value;\n    var res;\n   if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(str))\n    {\n      res = 1;\n    }\n    else{\n      res = 0;\n    }\n\n    if((event.target.name.charAt(event.target.name.length-1))==='1')\n    {\n      if(res === 1){\n           changeAlert_1(\"\");\n         }\n         else{\n           changeAlert_1(\"* invalid email \");\n           if(str===\"\"){\n              changeAlert_1(\"\");\n           }\n         }\n    }\n    else{\n      if(res === 1){\n         changeAlert_3(\"\");\n      }\n      else{\n         changeAlert_3(\"* invalid email \");\n         if(str===\"\"){\n            changeAlert_3(\"\");\n         }\n       }\n    }\n\n\n  }\n\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  function Users(details,method){\n    var formBody = [];\n    for (var property in details) {\n      var encodedKey = encodeURIComponent(property);\n      var encodedValue = encodeURIComponent(details[property]);\n      formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n    fetch('https://information-hub-backend.herokuapp.com/' + method,{\n      method: 'POST',\n      body: formBody,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    })\n    .then((response) => {\n        var data = response.text();\n        var p = Promise.resolve(data);\n        p.then(function(value) {\n             if(value === \"Successful\"){\n                 dispatch({type:'login'});\n             }\n             else{\n                 if(method === 'login'){\n                   changeAlert_4(value);\n                 }\n                 else{\n                   changeAlert_2(value);\n                 }\n                 dispatch({type:'logout'});\n             }\n         });\n    })\n  }\n\n  const clickHandler = (event) => {\n      event.preventDefault();\n      if(event.target.username_1){\n        const username = event.target.username.value;\n        const email = event.target.username_1.value;\n        const password = event.target.password_1.value;\n        let details = {\n          'email':email,\n          'username':username,\n          'password':password\n        };\n        Users(details,'register');\n      }\n      else{\n        const username = event.target.username_2.value;\n        const password = event.target.password_2.value;\n        let details = {\n          'username':username,\n          'password':password\n        };\n        Users(details,'login');\n      }\n  }\n\n  const clickHandlerOAuth = async (method) => {\n    const res = await socialMediaAuth(method);\n    const username = res.displayName;\n    const email = res.email;\n    const googleId = res.uid;\n    let details = {\n      'email':email,\n      'username':username,\n      'googleId':googleId\n    };\n    if(res.email){\n      if(method === googleProvider){\n        Users(details,'auth/google');\n      }\n      else if(method === githubProvider){\n        Users(details,'auth/github');\n      }\n      else if(method === microsoftProvider){\n        Users(details,'auth/microsoft');\n      }\n    }\n\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\" >\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"Signup\" {...a11yProps(0)} />\n          <Tab label=\"Login\" {...a11yProps(1)} />\n          <Tab label=\"OAuth\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n        <div class=\"container-fluid\">\n        <div class=\"signup\">\n            <form onSubmit = {clickHandler}>\n              <label for=\"chk\" aria-hidden=\"true\" class=\"login-label\">Sign up</label>\n              <input type=\"name\" name=\"username\" placeholder=\"Username\" required=\"\" class=\"login-input username-2\" />\n              <p className = \"alert\">{alert_3}</p>\n              <input onChange={validateEmail}  type=\"email\" name=\"username_1\" placeholder=\"Email\" required=\"\" class=\"login-input username-1\" />\n              <p className = \"alert\">{alert_1}</p>\n              <input onChange={validatePassword}  type=\"password\" name=\"password_1\" placeholder=\"Password\" required=\"\" class=\"login-input password-1\" />\n              <p className = \"alert\">{alert_2}</p>\n              <button type=\"submit\" class=\"hover-button\">Sign up</button>\n            </form>\n        </div>\n        </div>\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n        <div class=\"login\">\n            <form onSubmit = {clickHandler}>\n              <label for=\"chk\" aria-hidden=\"true\" class=\"login-label\">Login</label>\n              <input  type=\"name\" name=\"username_2\" placeholder=\"Username\" required=\"\" class=\"login-input username-2\" />\n              <p className = \"alert\">{alert_3}</p>\n              <input onChange={validatePassword} type=\"password\" name=\"password_2\" placeholder=\"Password\" required=\"\" class=\"login-input password-2\" />\n              <p className = \"alert\">{alert_4}</p>\n              <button type=\"submit\" class=\"hover-button\">Login</button>\n            </form>\n       </div>\n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n            <div class=\"container-fluid\" style={{lineHeight:\"5\",display:\"grid\",justifyContent:\"center\",alignItems:\"center\"}}>\n            <a onClick = {() => clickHandlerOAuth(googleProvider)} class=\"btn btn-outline-danger btn-block btn-6\" style={{fontSize:\"1.15rem\"}}><i class=\"fab fa-google\" style={{paddingRight:\"1rem\",fontSize:\"1.4rem\"}}></i> Sign in with <b>Google</b></a>\n            <a onClick = {() => clickHandlerOAuth(microsoftProvider)} class=\"btn btn-outline-primary btn-block btn-4\" style={{fontSize:\"1.15rem\"}}><i class=\"fab fa-facebook-square \" style={{paddingRight:\"1rem\",fontSize:\"1.4rem\"}}></i> Sign in with <b>Facebook</b></a>\n            <a onClick = {() => clickHandlerOAuth(githubProvider)} class=\"btn btn-outline-dark btn-block btn-5\" style={{fontSize:\"1.15rem\"}}><i class=\"fab fa-github \" style={{paddingRight:\"1rem\",fontSize:\"1.4rem\"}}></i>Sign in with <b>Github</b></a>\n            </div>\n        </TabPanel>\n      </SwipeableViews>\n    </div>\n  );\n}\n","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Intro.jsx",[],"/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Info.jsx",[],"/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Contact.jsx",["78","79","80","81","82"],"import React from 'react';\n\nfunction contact(){\n\n  return (<div class=\"container-fluid contact-container\">\n    <a href=\"https://www.linkedin.com/in/kottedheeraj/\" target=\"_blank\" class=\"linkedin\"><i class=\"fab fa-linkedin fa-4x\"></i></a>\n    <a href=\"\" class=\"facebook\"><i class=\"fab fa-facebook-square fa-4x\" ></i></a>\n    <a href=\"\" class=\"instagram\"><i class=\"fab fa-instagram-square fa-4x\"></i></a>\n    <a href=\"mailto:kottedheeraj@gmail.com\" target=\"_blank\" class=\"gmail\"><i class=\"fas fa-envelope-square fa-4x\"></i></a>\n    <a href=\"https://github.com/Dheeraj0650\" target=\"_blank\" class=\"github\"><i class=\"fab fa-github-square fa-4x btn-8\"></i></a>\n  </div>);\n\n}\n\nexport default contact;\n","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/IntroImg.jsx",[],"/Users/kottedheeru/Documents/InformationHubFrontend/src/config/auth.js",[],"/Users/kottedheeru/Documents/InformationHubFrontend/src/config/authMethods.js",[],"/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Logo.jsx",[],"/Users/kottedheeru/Documents/InformationHubFrontend/src/config/firebase-config.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":22,"column":8,"nodeType":"89","endLine":22,"endColumn":10,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":13,"column":9,"nodeType":"93","endLine":13,"endColumn":104},{"ruleId":"91","severity":1,"message":"92","line":21,"column":15,"nodeType":"93","endLine":21,"endColumn":44},{"ruleId":"91","severity":1,"message":"94","line":29,"column":17,"nodeType":"93","endLine":29,"endColumn":117},{"ruleId":"91","severity":1,"message":"92","line":33,"column":19,"nodeType":"93","endLine":33,"endColumn":53},{"ruleId":"91","severity":1,"message":"92","line":34,"column":19,"nodeType":"93","endLine":34,"endColumn":53},{"ruleId":"91","severity":1,"message":"92","line":35,"column":19,"nodeType":"93","endLine":35,"endColumn":77},{"ruleId":"95","severity":1,"message":"96","line":11,"column":8,"nodeType":"97","messageId":"98","endLine":11,"endColumn":19},{"ruleId":"95","severity":1,"message":"99","line":12,"column":8,"nodeType":"97","messageId":"98","endLine":12,"endColumn":19},{"ruleId":"95","severity":1,"message":"100","line":13,"column":8,"nodeType":"97","messageId":"98","endLine":13,"endColumn":15},{"ruleId":"91","severity":1,"message":"94","line":288,"column":13,"nodeType":"93","endLine":288,"endColumn":144},{"ruleId":"91","severity":1,"message":"94","line":289,"column":13,"nodeType":"93","endLine":289,"endColumn":148},{"ruleId":"91","severity":1,"message":"94","line":290,"column":13,"nodeType":"93","endLine":290,"endColumn":142},{"ruleId":"101","severity":1,"message":"102","line":6,"column":5,"nodeType":"93","messageId":"103","endLine":6,"endColumn":90,"fix":"104"},{"ruleId":"91","severity":1,"message":"92","line":7,"column":5,"nodeType":"93","endLine":7,"endColumn":33},{"ruleId":"91","severity":1,"message":"92","line":8,"column":5,"nodeType":"93","endLine":8,"endColumn":34},{"ruleId":"101","severity":1,"message":"102","line":9,"column":5,"nodeType":"93","messageId":"103","endLine":9,"endColumn":75,"fix":"105"},{"ruleId":"101","severity":1,"message":"102","line":10,"column":5,"nodeType":"93","messageId":"103","endLine":10,"endColumn":77,"fix":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["109"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'GoogleLogin' is defined but never used.","Identifier","unusedVar","'GitHubLogin' is defined but never used.","'Cookies' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"110","text":"111"},{"range":"112","text":"111"},{"range":"113","text":"111"},"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},[195,195]," rel=\"noreferrer\"",[476,476],[601,601],"Update the dependencies array to be: [dispatch]",{"range":"116","text":"117"},[703,705],"[dispatch]"]