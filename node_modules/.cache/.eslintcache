[{"/Users/kottedheeru/Documents/InformationHubFrontend/src/index.js":"1","/Users/kottedheeru/Documents/InformationHubFrontend/src/store/index.js":"2","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/App.jsx":"3","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/languages.js":"4","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/SidebarMenuComponent.js":"5","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/InfoData.js":"6","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/weather/WeatherCards.js":"7","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/weather/Results.js":"8","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/weather/WeatherData.js":"9","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Intro.jsx":"10","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Navbar.jsx":"11","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Login.jsx":"12","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Info.jsx":"13","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Contact.jsx":"14","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/weather/ResultsCard.js":"15","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/containerCard.js":"16","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/InputField.js":"17","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/Dropdown.js":"18","/Users/kottedheeru/Documents/InformationHubFrontend/src/config/auth.js":"19","/Users/kottedheeru/Documents/InformationHubFrontend/src/config/authMethods.js":"20","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/IntroImg.jsx":"21","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Logo.jsx":"22","/Users/kottedheeru/Documents/InformationHubFrontend/src/config/firebase-config.js":"23","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/weather/weatherInfo.js":"24","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/toggleDropdown.js":"25","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Select.js":"26","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/weather/Select.js":"27","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/weather/WeatherByCityName.js":"28","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/weather/AirPollution.js":"29","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/weather/Geocoding.js":"30","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/movies/MovieCards.js":"31","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/movies/MovieData.js":"32"},{"size":279,"mtime":1629909748000,"results":"33","hashOfConfig":"34"},{"size":847,"mtime":1630072706847,"results":"35","hashOfConfig":"34"},{"size":6805,"mtime":1631706709779,"results":"36","hashOfConfig":"34"},{"size":885,"mtime":1631024916515,"results":"37","hashOfConfig":"34"},{"size":361,"mtime":1631243966165,"results":"38","hashOfConfig":"34"},{"size":6386,"mtime":1631706853886,"results":"39","hashOfConfig":"34"},{"size":1196,"mtime":1631024916516,"results":"40","hashOfConfig":"34"},{"size":32685,"mtime":1631559481512,"results":"41","hashOfConfig":"34"},{"size":2389,"mtime":1631298963391,"results":"42","hashOfConfig":"34"},{"size":729,"mtime":1631240701190,"results":"43","hashOfConfig":"34"},{"size":2361,"mtime":1631699985415,"results":"44","hashOfConfig":"34"},{"size":11425,"mtime":1631024916517,"results":"45","hashOfConfig":"34"},{"size":757,"mtime":1629909748000,"results":"46","hashOfConfig":"34"},{"size":694,"mtime":1629909748000,"results":"47","hashOfConfig":"34"},{"size":538,"mtime":1631519344355,"results":"48","hashOfConfig":"34"},{"size":447,"mtime":1631024916515,"results":"49","hashOfConfig":"34"},{"size":409,"mtime":1631709192747,"results":"50","hashOfConfig":"34"},{"size":1072,"mtime":1631199056228,"results":"51","hashOfConfig":"34"},{"size":246,"mtime":1629909748000,"results":"52","hashOfConfig":"34"},{"size":386,"mtime":1629971440893,"results":"53","hashOfConfig":"34"},{"size":48360,"mtime":1629909748000,"results":"54","hashOfConfig":"34"},{"size":4451,"mtime":1629909748000,"results":"55","hashOfConfig":"34"},{"size":460,"mtime":1629971680565,"results":"56","hashOfConfig":"34"},{"size":4817,"mtime":1631558466810,"results":"57","hashOfConfig":"34"},{"size":514,"mtime":1631242792471,"results":"58","hashOfConfig":"34"},{"size":14865,"mtime":1631242407649,"results":"59","hashOfConfig":"34"},{"size":14137,"mtime":1631243725621,"results":"60","hashOfConfig":"34"},{"size":10364,"mtime":1631544015136,"results":"61","hashOfConfig":"34"},{"size":7010,"mtime":1631544006237,"results":"62","hashOfConfig":"34"},{"size":5618,"mtime":1631559564502,"results":"63","hashOfConfig":"34"},{"size":769,"mtime":1631731191198,"results":"64","hashOfConfig":"34"},{"size":6588,"mtime":1631731243226,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1tl5w87",{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":3,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"68"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kottedheeru/Documents/InformationHubFrontend/src/index.js",[],["145","146"],"/Users/kottedheeru/Documents/InformationHubFrontend/src/store/index.js",[],"/Users/kottedheeru/Documents/InformationHubFrontend/src/components/App.jsx",["147","148","149","150"],"/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/languages.js",[],"/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/SidebarMenuComponent.js",[],"/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/InfoData.js",[],"/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/weather/WeatherCards.js",["151","152","153","154"],"import Card from '../containerCard';\nimport React from 'react';\nimport WeatherData from './WeatherData';\nimport {NavLink} from 'react-router-dom';\nimport {BrowserRouter as Router ,Switch ,Route} from 'react-router-dom';\n\nexport default function WeatherCard(){\n  return(\n      <React.Fragment>\n          <NavLink to = {`/method_1`}><Card name=\"method_1\" image=\"url(./location.png)\" bgColor=\"#AE00FB\" info=\"Get complete weather data at particular location using location coordinates\" heading=\"Location Coordinates\"/></NavLink>\n          <NavLink to = {`/method_2`}><Card name=\"method_2\" image=\"url(./city.webp)\" bgColor=\"#FB9300\" info=\"Get complete weather data at particular location using city name\" heading=\"City Name\" /></NavLink>\n          <NavLink to = {`/method_3`}><Card name=\"method_3\" image=\"url(./pollution.jpg)\" bgColor=\"#BB8760\" info=\"Get complete air pollution data at particular location using location coordinates\" heading=\"Air Pollution\" /></NavLink>\n          <NavLink to = {`/method_4`}><Card name=\"method_4\" image=\"url(./location-1.png)\" bgColor=\"#00C1D4\" info=\"Get complete geocoding data of particular location\" heading=\"Geocoding\" /></NavLink>\n      </React.Fragment>\n  );\n}\n","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/weather/Results.js",["155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175"],"import React, {useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport './Results.css';\nimport ResultsCard from './ResultsCard';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Carousel from 'react-bootstrap/Carousel';\nimport AwesomeSlider from 'react-awesome-slider';\nimport 'react-awesome-slider/dist/styles.css';\nimport weatherInfo from './weatherInfo';\nimport SelectOption from './Select';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport default function(){\n  const classes = useStyles();\n  const [timeOption,setTimeOption] = useState('');\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n  var details = history.location.state.details;\n  var method = history.location.state.method;\n  var detailsArray = {\n    current:false,\n    hourly:false,\n    minutely:false,\n    daily:false,\n    alerts:false\n  };\n\n  var currentTime = undefined;\n  var hourTime = undefined;\n  var minuteTime = undefined;\n  var dailyTime = undefined;\n  var alertsTime = undefined;\n  var timeKeys = undefined;\n  if(method === \"Weather\"){\n    for(var time in details){\n      if(time in detailsArray){\n        detailsArray[time] = details[time];\n      }\n    }\n    currentTime = detailsArray.current;\n    hourTime = detailsArray.hourly;\n    minuteTime = detailsArray.minutely;\n    dailyTime = detailsArray.daily;\n    alertsTime = detailsArray.alerts;\n    timeKeys = Object.keys(currentTime);\n  }\n\n  if(method === \"WeatherByCityName\" || method === \"WeatherByCityNameList\" || method === \"AirPollution\"){\n    currentTime = details;\n    timeKeys = Object.keys(currentTime);\n  }\n\n  if(method === \"Geocoding\"){\n    if(Array.isArray(details)){\n      currentTime = details;\n    }\n    else{\n      currentTime = [details];\n    }\n  }\n\n  const handleChange = (event) => {\n    setTimeOption(event.target.value);\n  };\n\n  const handleClose = () => {\n      setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const date = (unixTimestamp) => {\n    const milliseconds = unixTimestamp * 1000;\n    const dateObject = new Date(milliseconds);\n    const humanDateFormat = dateObject.toLocaleString(\"en-US\", {timeZoneName: \"short\"});\n    return humanDateFormat;\n  }\n\n  return (\n      <React.Fragment>\n          {method === \"Weather\" &&\n              <div class = \"container results-container\" style={{textAlign:'center'}}>\n                    <FormControl variant=\"filled\" className={classes.formControl} style={{minWidth: 250,marginBottom:\"2rem\"}} >\n                      <InputLabel id=\"demo-controlled-open-select-label\" style = {{fontSize:\"1.1rem\",color:\"#6a197d\",zIndex:\"-1\"}}>Time Options</InputLabel>\n                      <Select\n                        labelId=\"demo-controlled-open-select-label\"\n                        id=\"demo-controlled-open-select\"\n                        open={open}\n                        onClose={handleClose}\n                        onOpen={handleOpen}\n                        onChange={handleChange}\n                      >\n                        <MenuItem value={''}>None</MenuItem>\n                        {detailsArray.current && <MenuItem value={'current'}>current</MenuItem>}\n                        {detailsArray.daily && <MenuItem value={'daily'}>daily</MenuItem>}\n                        {detailsArray.minutely && <MenuItem value={'minutely'}>minutely</MenuItem>}\n                        {detailsArray.hourly && <MenuItem value={'hourly'}>hourly</MenuItem>}\n                        {detailsArray.alerts && <MenuItem value={'alerts'}>alerts</MenuItem>}\n                      </Select>\n                    </FormControl>\n                    {timeOption === \"\" && <div class=\"container\"><SelectOption /></div>}\n                    {timeOption === \"current\" &&\n                        <div class=\"wrapper results-card\" style={{marginLeft:'0px',marginRight:'0px'}}>\n                            <div class=\"inner\" style={{width:\"70rem\",paddingLeft:\"0px\",paddingRight:\"0px\"}}>\n                                <h3 class=\"heading\">Current Time</h3>\n                                <p>{date(currentTime.dt)}</p>\n                                <div class=\"container\" >\n                                  {timeKeys.map((key,index) => {\n                                    var weatherIcon = `http://openweathermap.org/img/wn/${currentTime.weather[0].icon}@2x.png`;\n                                    var weather = currentTime.weather[0].description;\n                                      if(typeof currentTime[key] === \"number\"){\n                                        let value = currentTime[key];\n                                        let headingInfo = undefined;\n                                        if(['dt','sunrise','sunset','moonrise','moonset'].includes(key)){\n                                            value = date(value);\n                                        }\n                                        if(key in weatherInfo){\n                                          headingInfo = weatherInfo[key];\n                                        }\n                                        return <ResultsCard class = \"card l-bg-green-dark\" heading = {key} value = {value} weatherIcon = {weatherIcon} headingInfo = {headingInfo} weather={weather}/>\n                                      }\n                                  })}\n                                </div>\n                           </div>\n                        </div>\n                      }\n                      {timeOption === \"daily\" &&\n                          <AwesomeSlider bullets = {true} organicArrows = {currentTime.length > 1?true:false} style={{zIndex:\"0\"}}>\n                                  {dailyTime.map((info) => {\n                                      var dailyKeys = Object.keys(info);\n                                      var weatherIcon = info.weather?`http://openweathermap.org/img/wn/${info.weather[0].icon}@2x.png`:'';\n                                      var weather = info.weather?info.weather[0].description:'';\n                                      return (\n                                              <div class=\"container results\">\n                                                  <div class=\"wrapper results-card\">\n                                                        <div class=\"inner\" style={{width:\"70rem\",height:\"100rem\",paddingLeft:\"0px\",paddingRight:\"0px\"}}>\n                                                            <h3 class=\"heading\">Daily Time</h3>\n                                                            <p>{date(info.dt)}</p>\n                                                            <div class=\"container\" >\n                                                                {dailyKeys.map((key,index) => {\n                                                                  if(typeof info[key] === \"number\"){\n                                                                    let value = info[key];\n                                                                    let headingInfo = undefined;\n                                                                    if(['dt','sunrise','sunset','moonrise','moonset'].includes(key)){\n                                                                        value = date(value);\n                                                                    }\n                                                                    if(key in weatherInfo){\n                                                                      headingInfo = weatherInfo[key];\n                                                                    }\n                                                                    return <ResultsCard class = \"card l-bg-green-dark\" heading = {key} value = {value} weatherIcon = {weatherIcon} headingInfo = {headingInfo} weather={weather}/>\n                                                                  }\n                                                                })}\n                                                            </div>\n                                                       </div>\n                                                    </div>\n                                              </div>\n                                             )\n                                  })}\n                          </AwesomeSlider>\n                      }\n                      {timeOption === \"minutely\" &&\n                      <AwesomeSlider bullets = {true} organicArrows = {currentTime.length > 1?true:false} style={{zIndex:\"0\"}}>\n                              {minuteTime.map((info) => {\n                                  var minuteKeys = Object.keys(info);\n                                  var weatherIcon = info.weather?`http://openweathermap.org/img/wn/${info.weather[0].icon}@2x.png`:'';\n                                  var weather = info.weather?info.weather[0].description:'';\n                                  return (\n                                          <div class=\"container results\">\n                                              <div class=\"wrapper results-card\">\n                                                    <div class=\"inner\" style={{width:\"70rem\",height:\"100rem\",paddingLeft:\"0px\",paddingRight:\"0px\"}}>\n                                                        <h3 class=\"heading\">Minutely Time</h3>\n                                                        <p>{date(info.dt)}</p>\n                                                        <div class=\"container\" >\n                                                            {minuteKeys.map((key,index) => {\n                                                              if(typeof info[key] === \"number\"){\n                                                                let value = info[key];\n                                                                let headingInfo = undefined;\n                                                                if(['dt','sunrise','sunset','moonrise','moonset'].includes(key)){\n                                                                    value = date(value);\n                                                                }\n                                                                if(key in weatherInfo){\n                                                                  headingInfo = weatherInfo[key];\n                                                                }\n                                                                return <ResultsCard class = \"card l-bg-green-dark\" heading = {key} value = {value} weatherIcon = {weatherIcon} headingInfo = {headingInfo} weather={weather}/>\n                                                              }\n                                                            })}\n                                                        </div>\n                                                   </div>\n                                                </div>\n                                          </div>\n                                         )\n                              })}\n                      </AwesomeSlider>\n                      }\n                      {timeOption === \"hourly\" &&\n                          <AwesomeSlider bullets = {true} organicArrows = {currentTime.length > 1?true:false} style={{zIndex:\"0\"}}>\n                                  {hourTime.map((info) => {\n                                      var hourKeys = Object.keys(info);\n                                      var weatherIcon = info.weather?`http://openweathermap.org/img/wn/${info.weather[0].icon}@2x.png`:'';\n                                      var weather = info.weather?info.weather[0].description:'';\n                                      return (\n                                              <div class=\"container results\">\n                                                  <div class=\"wrapper results-card\" >\n                                                        <div class=\"inner\" style={{width:\"70rem\",height:\"100rem\",paddingLeft:\"0px\",paddingRight:\"0px\"}}>\n                                                            <h3 class=\"heading\">Hourly Time</h3>\n                                                            <p>{date(info.dt)}</p>\n                                                            <div class=\"container\">\n                                                                {hourKeys.map((key,index) => {\n                                                                  if(typeof info[key] === \"number\"){\n                                                                    let value = info[key];\n                                                                    let headingInfo = undefined;\n                                                                    if(['dt','sunrise','sunset','moonrise','moonset'].includes(key)){\n                                                                        value = date(value);\n                                                                    }\n                                                                    if(key in weatherInfo){\n                                                                      headingInfo = weatherInfo[key];\n                                                                    }\n                                                                    return <ResultsCard class = \"card l-bg-green-dark\" heading = {key} value = {value} weatherIcon = {weatherIcon} headingInfo = {headingInfo} weather={weather}/>\n                                                                  }\n                                                                })}\n                                                            </div>\n                                                       </div>\n                                                    </div>\n                                              </div>\n                                             )\n                                  })}\n                          </AwesomeSlider>\n                      }\n                      {timeOption === \"alerts\" && alertsTime.map((key,index) => {\n                        if(typeof alertsTime[key] === \"number\"){\n                          let value = alertsTime[key];\n                          if(['dt','sunrise','sunset','start','end'].includes(key)){\n                              value = date(value);\n                          }\n                          return <ResultsCard class = \"card l-bg-orange-dark\" heading = {key} value = {value} />\n                        }\n                      })}\n                </div>\n          }\n              {method === \"WeatherByCityName\" &&\n                  <div class=\"wrapper results-card\" style={{marginLeft:'0px',marginRight:'0px'}}>\n                      <div class=\"inner\" style={{width:\"70rem\",paddingLeft:\"0px\",paddingRight:\"0px\"}}>\n                          <h3 class=\"heading\">Current Time</h3>\n                          <p>{date(currentTime.dt)}</p>\n                          <div class=\"container\" >\n                            {timeKeys.map((key,index) => {\n                                if(typeof currentTime[key] === \"number\" || typeof currentTime[key] === \"string\"){\n                                  var weatherIcon = currentTime.weather?`http://openweathermap.org/img/wn/${currentTime.weather[0].icon}@2x.png`:'';\n                                  var weather = currentTime.weather?currentTime.weather[0].description:'';\n                                  let value = currentTime[key];\n                                  let headingInfo = undefined;\n                                  if(['dt','sunrise','sunset','moonrise','moonset'].includes(key)){\n                                      value = date(value);\n                                  }\n                                  if(key in weatherInfo){\n                                    headingInfo = weatherInfo[key];\n                                  }\n                                  if(!(['type','cod','id'].includes(key))){\n                                    return <ResultsCard class = \"card l-bg-green-dark\" heading = {key} value = {value} weatherIcon = {weatherIcon} headingInfo = {headingInfo} weather={weather}/>\n                                  }\n                                }\n                                else if(typeof currentTime[key] === \"object\" && key != \"weather\" ){\n                                  var weatherIcon = currentTime.weather?`http://openweathermap.org/img/wn/${currentTime.weather[0].icon}@2x.png`:'';\n                                  var weather = currentTime.weather?currentTime.weather[0].description:'';\n                                  let currentTimeKeys = Object.keys(currentTime[key]);\n                                  return (\n                                    <React.Fragment>\n                                      {currentTimeKeys.map((key_1,index_1) => {\n                                        let value = currentTime[key][key_1];\n                                        let headingInfo = undefined;\n                                        if(['dt','sunrise','sunset','moonrise','moonset'].includes(key_1)){\n                                            value = date(value);\n                                        }\n                                        if(key_1 in weatherInfo){\n                                          headingInfo = weatherInfo[key_1];\n                                        }\n                                        if(!(['type','cod','id'].includes(key_1))){\n                                          return <ResultsCard class = \"card l-bg-green-dark\" heading = {key_1} value = {value} weatherIcon = {weatherIcon} headingInfo = {headingInfo} weather={weather}/>\n                                        }\n                                      })}\n                                    </React.Fragment>\n                                  )\n                                }\n\n\n\n                            })}\n                          </div>\n                     </div>\n                  </div>\n              }\n              {method === \"WeatherByCityNameList\" &&\n              <AwesomeSlider bullets = {true} organicArrows = {currentTime.length > 1?true:false} style={{zIndex:\"0\"}}>\n                          {currentTime.list.map((timeKeys_1) => {\n                                let timeKeys = Object.keys(timeKeys_1);\n                                var weatherIcon = timeKeys_1.weather?`http://openweathermap.org/img/wn/${timeKeys_1.weather[0].icon}@2x.png`:'';\n                                var weather = timeKeys_1.weather?timeKeys_1.weather[0].description:'';\n                                return (\n                                  <div class=\"container results-container\">\n                                      <div class=\"wrapper results-card\" style={{marginLeft:'0px',marginRight:'0px'}}>\n                                              <div class=\"inner\" style={{width:\"70rem\",paddingLeft:\"0px\",paddingRight:\"0px\"}}>\n                                                  <h3 class=\"heading\">Current Time</h3>\n                                                  <p>{date(timeKeys_1.dt)}</p>\n                                                  <div class=\"container\" >\n                                                    {timeKeys.map((key,index) => {\n                                                        if(typeof timeKeys_1[key] === \"number\" || typeof timeKeys_1[key] === \"string\"){\n                                                          let value = timeKeys_1[key];\n                                                          let headingInfo = undefined;\n                                                          if(['dt','sunrise','sunset','moonrise','moonset'].includes(key)){\n                                                              value = date(value);\n                                                          }\n                                                          if(key in weatherInfo){\n                                                            headingInfo = weatherInfo[key];\n                                                          }\n                                                          if(!(['type','cod','id'].includes(key))){\n                                                            return <ResultsCard class = \"card l-bg-green-dark\" heading = {key} value = {value} weatherIcon = {weatherIcon} headingInfo = {headingInfo} weather={weather}/>\n                                                          }\n                                                        }\n                                                        else if(typeof timeKeys_1[key] === \"object\" && key != \"weather\" && timeKeys_1[key] != null){\n                                                          let currentTimeKeys = Object.keys(timeKeys_1[key]);\n                                                          return (\n                                                            <React.Fragment>\n                                                              {currentTimeKeys.map((key_1,index_1) => {\n                                                                let value = timeKeys_1[key][key_1];\n                                                                let headingInfo = undefined;\n                                                                if(['dt','sunrise','sunset','moonrise','moonset'].includes(key_1)){\n                                                                    value = date(value);\n                                                                }\n                                                                if(key_1 in weatherInfo){\n                                                                  headingInfo = weatherInfo[key_1];\n                                                                }\n                                                                if(!(['type','cod','id'].includes(key_1))){\n                                                                  return <ResultsCard class = \"card l-bg-green-dark\" heading = {key_1} value = {value} weatherIcon = {weatherIcon} headingInfo = {headingInfo} weather={weather}/>\n                                                                }\n                                                              })}\n                                                            </React.Fragment>\n                                                          )\n                                                        }\n                                                    })}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                  )\n                              }\n                            )}\n                </AwesomeSlider>\n              }\n              {method === \"AirPollution\" &&\n              <AwesomeSlider bullets = {true} organicArrows = {currentTime.length > 1?true:false} style={{zIndex:\"0\",height:\"70rem\"}}>\n                          {currentTime.list.map((timeKeys_1) => {\n                                let timeKeys = Object.keys(timeKeys_1);\n                                var weatherIcon = timeKeys_1.weather?`http://openweathermap.org/img/wn/${timeKeys_1.weather[0].icon}@2x.png`:'';\n                                var weather = timeKeys_1.weather?timeKeys_1.weather[0].description:'';\n                                return (\n                                  <div class=\"container results-container\">\n                                      <div class=\"wrapper results-card\" style={{marginLeft:'0px',marginRight:'0px'}}>\n                                              <div class=\"inner\" style={{width:\"70rem\",paddingLeft:\"0px\",paddingRight:\"0px\"}}>\n                                                  <h3 class=\"heading\">Air Pollution</h3>\n                                                  <p>{date(timeKeys_1.dt)}</p>\n                                                  <div class=\"container\" >\n                                                    {timeKeys.map((key,index) => {\n                                                        if(typeof timeKeys_1[key] === \"number\" || typeof timeKeys_1[key] === \"string\"){\n                                                          let value = timeKeys_1[key];\n                                                          let headingInfo = undefined;\n                                                          if(['dt','sunrise','sunset','moonrise','moonset'].includes(key)){\n                                                              value = date(value);\n                                                          }\n                                                          if(key in weatherInfo){\n                                                            headingInfo = weatherInfo[key];\n                                                          }\n                                                          if(!(['type','cod','id'].includes(key))){\n                                                            return <ResultsCard class = \"card l-bg-green-dark\" heading = {key} value = {value} weatherIcon = {weatherIcon} headingInfo = {headingInfo} weather={weather}/>\n                                                          }\n                                                        }\n                                                        else if(typeof timeKeys_1[key] === \"object\" && key != \"weather\" && timeKeys_1[key] != null){\n                                                          let currentTimeKeys = Object.keys(timeKeys_1[key]);\n                                                          return (\n                                                            <React.Fragment>\n                                                              {currentTimeKeys.map((key_1,index_1) => {\n                                                                let value = timeKeys_1[key][key_1];\n                                                                let headingInfo = undefined;\n                                                                if(['dt','sunrise','sunset','moonrise','moonset'].includes(key_1)){\n                                                                    value = date(value);\n                                                                }\n                                                                if(key_1 in weatherInfo){\n                                                                  headingInfo = weatherInfo[key_1];\n                                                                }\n                                                                if(!(['type','cod','id'].includes(key_1))){\n                                                                  return <ResultsCard class = \"card l-bg-green-dark\" heading = {key_1} value = {value} weatherIcon = {weatherIcon} headingInfo = {headingInfo} weather={weather}/>\n                                                                }\n                                                              })}\n                                                            </React.Fragment>\n                                                          )\n                                                        }\n                                                    })}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                  )\n                              }\n                            )}\n                </AwesomeSlider>\n              }\n              {method === \"Geocoding\" &&\n                <AwesomeSlider bullets = {true} organicArrows = {currentTime.length > 1?true:false} style={{zIndex:\"0\",height:\"80rem\"}}>\n                        {currentTime.map((timeKeys_1) => {\n                              let timeKeys = Object.keys(timeKeys_1);\n                              var weatherIcon = timeKeys_1.weather?`http://openweathermap.org/img/wn/${timeKeys_1.weather[0].icon}@2x.png`:'';\n                              var weather = timeKeys_1.weather?timeKeys_1.weather[0].description:'';\n                              return (\n                                <div class=\"container results-container\">\n                                    <div class=\"wrapper results-card\" style={{marginLeft:'0px',marginRight:'0px'}}>\n                                            <div class=\"inner\" style={{width:\"70rem\",paddingLeft:\"0px\",paddingRight:\"0px\"}}>\n                                                <h3 class=\"heading\">Geocoding</h3>\n                                                <p>{timeKeys_1.name}</p>\n                                                <div class=\"container\" >\n                                                  {timeKeys.map((key,index) => {\n                                                      if(typeof timeKeys_1[key] === \"number\" || typeof timeKeys_1[key] === \"string\"){\n                                                        let value = timeKeys_1[key];\n                                                        let headingInfo = undefined;\n                                                        if(['dt','sunrise','sunset','moonrise','moonset'].includes(key)){\n                                                            value = date(value);\n                                                        }\n                                                        if(key in weatherInfo){\n                                                          headingInfo = weatherInfo[key];\n                                                        }\n                                                        if(!(['type','cod','id'].includes(key))){\n                                                          return <ResultsCard class = \"card l-bg-green-dark\" heading = {key} value = {value} weatherIcon = {weatherIcon} headingInfo = {headingInfo} weather={weather}/>\n                                                        }\n                                                      }\n                                                      else if(typeof timeKeys_1[key] === \"object\" && key != \"weather\" && timeKeys_1[key] != null){\n                                                        let currentTimeKeys = Object.keys(timeKeys_1[key]);\n                                                        return (\n                                                          <React.Fragment>\n                                                            {currentTimeKeys.map((key_1,index_1) => {\n                                                              let value = timeKeys_1[key][key_1];\n                                                              let headingInfo = undefined;\n                                                              if(['dt','sunrise','sunset','moonrise','moonset'].includes(key_1)){\n                                                                  value = date(value);\n                                                              }\n                                                              if(key_1 in weatherInfo){\n                                                                headingInfo = weatherInfo[key_1];\n                                                              }\n                                                              if(!(['type','cod','id'].includes(key_1))){\n                                                                return <ResultsCard class = \"card l-bg-green-dark\" heading = {key_1} value = {value} weatherIcon = {weatherIcon} headingInfo = {headingInfo} weather={weather}/>\n                                                              }\n                                                            })}\n                                                          </React.Fragment>\n                                                        )\n                                                      }\n                                                  })}\n                                              </div>\n                                          </div>\n                                      </div>\n                                  </div>\n                                )\n                            }\n                          )}\n                  </AwesomeSlider>\n              }\n      </React.Fragment>\n  );\n}\n","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/weather/WeatherData.js",["176"],"import React, {useState} from \"react\";\nimport '../InfoContainer.css';\nimport Dropdown from '../Dropdown';\nimport InputField from '../InputField';\nimport {useHistory, NavLink} from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport default function Weather(props){\n  const history = useHistory();\n  const [circularProgress,setCircularProgress] = useState(\"static\");\n  const getDetails = (details,method) => {\n    setCircularProgress(\"indeterminate\");\n    fetch('https://information-hub-backend.herokuapp.com/' + method,{\n      method: 'POST',\n      body: details,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    })\n    .then(function(resp) { return resp.json() }) // Convert data to json\n    .then(function(data) {\n        setCircularProgress(\"static\");\n        history.push('/results',{ details: data,method:\"Weather\"});\n    })\n    .catch(err => {\n        setCircularProgress(\"static\");\n    });\n  }\n  let clickHandler = (event) => {\n    event.preventDefault();\n    var details = ['lat','lon','exclude','units','lang'];\n    var values = [event.target.latitude.value,event.target.longitude.value,event.target.exclude.value,event.target.units.value,event.target.language.value];\n    var formBody = [];\n    var idx = 0;\n    for (var property in details) {\n      var encodedKey = encodeURIComponent(details[property]);\n      var encodedValue = encodeURIComponent(values[idx]);\n      formBody.push(encodedKey + \"=\" + encodedValue);\n      idx++;\n    }\n    formBody = formBody.join(\"&\");\n    getDetails(formBody,props.api);\n  }\n  return (\n    <div class=\"container results-card\">\n      <div class=\"wrapper\" >\n    \t\t\t<div class=\"inner\">\n    \t\t\t\t<form onSubmit={clickHandler}>\n    \t\t\t\t\t<h3 class=\"heading\">{props.heading}</h3>\n    \t\t\t\t\t<p>{props.info}</p>\n              {props.details.map((info) => (info.type === \"InputField\"?<InputField name={info.name} description={info.description}/>:<Dropdown name={info.name} description={info.description} content={info.content}/>))}\n              {circularProgress===\"indeterminate\"? <CircularProgress class=\"loader\" color=\"default\" variant={circularProgress}/>:\n              <button class=\"form-button\" type=\"submit\" value = \"submit\">Submit\n    \t\t\t\t\t\t<i class=\"zmdi zmdi-arrow-right\"></i>\n    \t\t\t\t\t</button>}\n    \t\t\t\t</form>\n    \t\t </div>\n      </div>\n    </div>\n  );\n}\n","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Intro.jsx",[],"/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Navbar.jsx",["177","178","179","180","181","182"],"/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Login.jsx",["183","184","185","186","187"],"import React ,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport {useDispatch} from 'react-redux';\nimport Cookies from 'js-cookie';\nimport socialMediaAuth from '../config/auth';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {googleProvider,githubProvider,microsoftProvider} from '../config/authMethods';\nimport { authActions } from '../store/index';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 1000,\n    outline:null\n  },\n}));\n\nexport default function FullWidthTabs(props) {\n  const dispatch = useDispatch();\n  const [alert_1,changeAlert_1] = useState([false,'']);\n  const [alert_2,changeAlert_2] = useState([false,'']);\n  const [alert_3,changeAlert_3] = useState([false,'']);\n  const [alert_4,changeAlert_4] = useState([false,'']);\n  const [alert_5,changeAlert_5] = useState([false,'']);\n  const [circularProgress,setCircularProgress] = useState(\"static\");\n\n  let verify = false;\n\n  function validateUsername(event){\n  \t  var username=event.target.value;\n  \t  var usernamepattern=/^[A-Za-z .]{3,15}$/;\n    \tif(usernamepattern.test(username))\n    \t{\n        if((event.target.name.charAt(event.target.name.length-1))==='3')\n        {\n          changeAlert_5([true,\"\"])\n        }\n        else{\n          changeAlert_3([true,\"\"])\n        }\n      }\n      else\n      {\n        if((event.target.name.charAt(event.target.name.length-1))==='3')\n        {\n          changeAlert_5([false,\"* invalid username, username should contain only characters [A-Z][a-z] and length should be in between 3 and 15\"])\n        }\n        else{\n          changeAlert_3([false,\"* invalid username, username should contain only characters [A-Z][a-z] and length should be in between 3 and 15\"])\n        }\n      }\n\t }\n\n  function validatePassword(event) {\n     var str = event.target.value;\n     var res;\n     if (str.match(/[a-z]/g) && str.match(/[A-Z]/g) && str.match(/[0-9]/g) && str.match(/[^a-zA-Z\\d]/g) && str.length >= 8)\n         res = 1;\n     else\n         res = 0;\n\n    if((event.target.name.charAt(event.target.name.length-1))==='1')\n    {   if(res === 1){\n          changeAlert_2([true,\"\"]);\n        }\n        else{\n          changeAlert_2([false,\"* weak password A password is correct if it contains: 1) At least 1 uppercase character.2) At least 1 lowercase character.3) At least 1 digit.4) At least 1 special character.5) Minimum 8 characters.\"]);\n          if(str===\"\"){\n             changeAlert_2([true,\"\"]);\n          }\n        }\n    }\n    else{\n        if(res === 1){\n            changeAlert_4([true,\"\"]);\n        }\n        else{\n          changeAlert_4([false,\"* invalid password \"]);\n          if(str===\"\"){\n             changeAlert_4([true,\"\"]);\n          }\n        }\n    }\n\n\n  }\n\n\n  function validateEmail(event)\n  {\n    var str = event.target.value;\n    var res;\n   if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(str))\n    {\n      res = 1;\n    }\n    else{\n      res = 0;\n    }\n\n    if((event.target.name.charAt(event.target.name.length-1))==='1')\n    {\n      if(res === 1){\n           changeAlert_1([true,\"\"]);\n         }\n         else{\n           changeAlert_1([false,\"* invalid email \"]);\n           if(str===\"\"){\n              changeAlert_1([true,\"\"]);\n           }\n         }\n    }\n    else{\n      if(res === 1){\n         changeAlert_3([true,\"\"]);\n      }\n      else{\n         changeAlert_3([false,\"* invalid email \"]);\n         if(str===\"\"){\n            changeAlert_3([true,\"\"]);\n         }\n       }\n    }\n\n\n  }\n\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  function Users(details,method){\n    var formBody = [];\n    for (var property in details) {\n      var encodedKey = encodeURIComponent(property);\n      var encodedValue = encodeURIComponent(details[property]);\n      formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n    fetch('https://information-hub-backend.herokuapp.com/' + method,{\n      method: 'POST',\n      body: formBody,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    })\n    .then((response) => {\n        var data = response.text();\n        var p = Promise.resolve(data);\n        p.then(function(value) {\n             setCircularProgress(\"static\");\n             if(value === \"Successful\"){\n                 if(details.username){\n                   dispatch(authActions.login(details.username));\n                 }\n                 else{\n                   dispatch(authActions.login(details.email));\n                 }\n             }\n             else{\n                 if(method === 'login'){\n                   changeAlert_4([true,value]);\n                 }\n                 else{\n                   changeAlert_2([true,value]);\n                 }\n                 dispatch(authActions.logout());\n             }\n         });\n    })\n  }\n\n  const clickHandler = (event) => {\n      event.preventDefault();\n      if(event.target.username_1){\n        if(alert_1[0] && alert_2[0] && alert_5[0]){\n          setCircularProgress(\"indeterminate\");\n          const username = event.target.username_3.value;\n          const email = event.target.username_1.value;\n          const password = event.target.password_1.value;\n          let details = {\n            'email':email,\n            'username':username,\n            'password':password\n          };\n          Users(details,'register');\n        }\n      }\n      else{\n        if(alert_3[0] && alert_4[0]){\n          setCircularProgress(\"indeterminate\");\n          const username = event.target.username_2.value;\n          const password = event.target.password_2.value;\n          let details = {\n            'username':username,\n            'password':password\n          };\n          Users(details,'login');\n        }\n      }\n  }\n\n  const clickHandlerOAuth = async (method) => {\n    setCircularProgress(\"indeterminate\");\n    const res = await socialMediaAuth(method);\n    const username = res.displayName;\n    const email = res.email;\n    const googleId = res.uid;\n    let details = {\n      'email':email,\n      'username':username,\n      'googleId':googleId\n    };\n    if(res.email){\n      if(method === googleProvider){\n        Users(details,'auth/google');\n      }\n      else if(method === githubProvider){\n        Users(details,'auth/github');\n      }\n      else if(method === microsoftProvider){\n        Users(details,'auth/microsoft');\n      }\n    }\n    else{\n      setCircularProgress(\"static\");\n    }\n\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\" >\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"Signup\" {...a11yProps(0)} />\n          <Tab label=\"Login\" {...a11yProps(1)} />\n          <Tab label=\"OAuth\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n        <div class=\"container-fluid\">\n        <div class=\"signup\">\n            <form onSubmit = {clickHandler}>\n              <label for=\"chk\" aria-hidden=\"true\" class=\"login-label\">Sign up</label>\n              <input onChange = {validateUsername} type=\"name\" name=\"username_3\" placeholder=\"Username\" required=\"\" class=\"login-input username-2\" />\n              <p className = \"alert\">{alert_5[1]}</p>\n              <input onChange={validateEmail}  type=\"email\" name=\"username_1\" placeholder=\"Email\" required=\"\" class=\"login-input username-1\" />\n              <p className = \"alert\">{alert_1[1]}</p>\n              <input onChange={validatePassword}  type=\"password\" name=\"password_1\" placeholder=\"Password\" required=\"\" class=\"login-input password-1\" />\n              <p className = \"alert\">{alert_2[1]}</p>\n              {circularProgress===\"indeterminate\" && <CircularProgress color=\"primary\" variant={circularProgress}/>}\n              <button type=\"submit\" class=\"hover-button\">Sign up</button>\n            </form>\n        </div>\n        </div>\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n        <div class=\"login\">\n            <form onSubmit = {clickHandler}>\n              <label for=\"chk\" aria-hidden=\"true\" class=\"login-label\">Login</label>\n              <input onChange = {validateUsername} type=\"name\" name=\"username_2\" placeholder=\"Username\" required=\"\" class=\"login-input username-2\" />\n              <p className = \"alert\">{alert_3[1]}</p>\n              <input onChange={validatePassword} type=\"password\" name=\"password_2\" placeholder=\"Password\" required=\"\" class=\"login-input password-2\" />\n              <p className = \"alert\">{alert_4[1]}</p>\n              {circularProgress===\"indeterminate\" && <CircularProgress color=\"primary\" variant={circularProgress}/>}\n              <button type=\"submit\" class=\"hover-button\">Login</button>\n            </form>\n       </div>\n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n            <div class=\"container-fluid\" style={{lineHeight:\"5\",display:\"grid\",justifyContent:\"center\",alignItems:\"center\"}}>\n            <a onClick = {() => clickHandlerOAuth(googleProvider)} class=\"btn btn-outline-danger btn-block btn-6\" style={{fontSize:\"1.15rem\"}}><i class=\"fab fa-google\" style={{paddingRight:\"1rem\",fontSize:\"1.4rem\"}}></i> Sign in with <b>Google</b></a>\n            <a onClick = {() => clickHandlerOAuth(microsoftProvider)} class=\"btn btn-outline-success btn-block btn-4\" style={{fontSize:\"1.15rem\"}}><i class=\"fab fa-microsoft\" style={{paddingRight:\"1rem\",fontSize:\"1.4rem\"}}></i> Sign in with <b>Microsoft</b></a>\n            <a onClick = {() => clickHandlerOAuth(githubProvider)} class=\"btn btn-outline-dark btn-block btn-5\" style={{fontSize:\"1.15rem\"}}><i class=\"fab fa-github \" style={{paddingRight:\"1rem\",fontSize:\"1.4rem\"}}></i>Sign in with <b>Github</b></a>\n            </div>\n        </TabPanel>\n      </SwipeableViews>\n    </div>\n  );\n}\n","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Info.jsx",[],"/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Contact.jsx",["188","189","190","191","192"],"import React from 'react';\n\nfunction contact(){\n\n  return (<div class=\"container-fluid contact-container\">\n    <a href=\"https://www.linkedin.com/in/kottedheeraj/\" target=\"_blank\" class=\"linkedin\"><i class=\"fab fa-linkedin fa-4x\"></i></a>\n    <a href=\"\" class=\"facebook\"><i class=\"fab fa-facebook-square fa-4x\" ></i></a>\n    <a href=\"\" class=\"instagram\"><i class=\"fab fa-instagram-square fa-4x\"></i></a>\n    <a href=\"mailto:kottedheeraj@gmail.com\" target=\"_blank\" class=\"gmail\"><i class=\"fas fa-envelope-square fa-4x\"></i></a>\n    <a href=\"https://github.com/Dheeraj0650\" target=\"_blank\" class=\"github\"><i class=\"fab fa-github-square fa-4x btn-8\"></i></a>\n  </div>);\n\n}\n\nexport default contact;\n","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/weather/ResultsCard.js",["193"],"import React from 'react';\nimport './Results.css'\n\nexport default function(props){\n  return (\n    <div class=\"row\">\n      <div class=\"col-6\" style={{fontFamily: \"'Lato', sans-serif\",fontSize:\"22px\",textAlign: \"left\"}}>\n        {props.heading}\n        <div style={{fontFamily: \"'Raleway', sans-serif\",fontSize:\"15px\"}} >{props.headingInfo?props.headingInfo:''}</div>\n      </div>\n      <div class=\"col-6\" style={{fontFamily: \"'Rubik', sans-serif\",fontSize:\"16px\",textAlign: \"center\"}}>\n        {props.value}\n      </div>\n    </div>\n  );\n}\n","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/containerCard.js",["194"],"import React, {useEffect} from 'react';\nimport './InfoContainer.css';\n\nexport default function Card(props){\n  return(\n    <div class=\"card_1\" style={{backgroundImage:props.image}} >\n      <div class=\"info\" style = {{backgroundColor:props.bgColor}}>\n        <p style={{fontSize:\"1.3rem\",height:\"1rem\",fontFamily: \"'Noto Sans', sans-serif\"}}>{props.heading}</p>\n        <p style={{fontSize:\"0.9rem\"}}>{props.info}</p>\n      </div>\n    </div>\n  )\n};\n","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/InputField.js",["195"],"/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/Dropdown.js",["196"],"import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nexport default function(props){\n  let content_arr = [];\n  for (const key in props.content){\n    content_arr.push([key ,props.content[key]]);\n  }\n  const [state, setState] = React.useState('');\n\n  const handleChange = (event) => {\n    const name = event.target.value;\n    setState(name);\n  };\n  return (\n    <div class=\"container\">\n      <FormControl variant=\"filled\" >\n        <InputLabel htmlFor=\"filled-age-native-simple\" style={{color:\"#00ade6\"}}>{props.name}</InputLabel>\n        <Select\n          native\n          value={state}\n          onChange={handleChange}\n          name={props.name}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          {content_arr.map((info) => (<option value={info[0]}>{info[1]}</option>))}\n        </Select>\n        <span style={{margin:\"8px 0 8px 0\",fontSize:\"0.8rem\"}}>{props.description}</span>\n      </FormControl>\n    </div>\n  );\n}\n","/Users/kottedheeru/Documents/InformationHubFrontend/src/config/auth.js",[],"/Users/kottedheeru/Documents/InformationHubFrontend/src/config/authMethods.js",[],"/Users/kottedheeru/Documents/InformationHubFrontend/src/components/IntroImg.jsx",[],"/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Logo.jsx",[],"/Users/kottedheeru/Documents/InformationHubFrontend/src/config/firebase-config.js",[],"/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/weather/weatherInfo.js",["197","198","199","200","201","202","203"],"\nconst info = {\n                lat:'Geographical coordinates of the location (latitude)',\n                lon:'Geographical coordinates of the location (longitude)',\n                timezone:'Timezone name for the requested location',\n                timezone_offset :'Shift in seconds from UTC',\n                current :'Current weather data API response',\n                dt:'Current time',\n                sunrise:'Sunrise time',\n                sunset :'Sunset time',\n                temp :'Temperature. Units - default: kelvin, metric: Celsius, imperial: Fahrenheit',\n                feels_like :'Temperature. This temperature parameter accounts for the human perception of weather. Units – default: kelvin, metric: Celsius, imperial: Fahrenheit.',\n                pressure:'Atmospheric pressure on the sea level, hPa',\n                humidity :'Humidity, %',\n                dew_point :'Atmospheric temperature (varying according to pressure and humidity) below which water droplets begin to condense and dew can form. Units – default: kelvin, metric: Celsius, imperial: Fahrenheit.',\n                clouds :'Cloudiness, %',\n                uvi :'Current UV index',\n                visibility:'Average visibility, metres',\n                wind_speed :'Wind speed. Wind speed. Units – default: metre/sec, metric: metre/sec, imperial: miles/hour. How to change units used',\n                wind_gust :'Wind gust. Units – default: metre/sec, metric: metre/sec, imperial: miles/hour. How to change units used',\n                wind_deg :'Wind direction, degrees (meteorological)',\n                moonrise:'The time of when the moon rises for this day',\n                moonset:'The time of when the moon sets for this day',\n                moon_phase:\"Moon phase. 0 and 1 are 'new moon', 0.25 is 'first quarter moon', 0.5 is 'full moon' and 0.75 is 'last quarter moon'. The periods in between are called 'waxing crescent', 'waxing gibous', 'waning gibous', and 'waning crescent', respectively.\",\n                pop:'Probability of precipitation',\n                rain :'Precipitation volume, mm',\n                precipitation: 'Precipitation volume, mm',\n                id:\"Weather condition id\",\n                main:\"Group of weather parameters (Rain, Snow, Extreme etc.)\",\n                base:\"Internal parameter\",\n                temp_min:\"Minimum temperature at the moment. This is minimal currently observed temperature (within large megalopolises and urban areas). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.\",\n                temp_max:\"Maximum temperature at the moment. This is maximal currently observed temperature (within large megalopolises and urban areas). Unit Default: Kelvin, Metric: Celsius, Imperial: Fahrenheit.\",\n                sea_level:\"Atmospheric pressure on the sea level, hPa\",\n                grnd_level:\"Atmospheric pressure on the ground level, hPa\",\n                speed:\"Wind speed. Unit Default: meter/sec, Metric: meter/sec, Imperial: miles/hour.\",\n                deg:\"Wind direction, degrees (meteorological)\",\n                gust:\"Wind gust. Unit Default: meter/sec, Metric: meter/sec, Imperial: miles/hour\",\n                all:\"Cloudiness, %\",\n                '1h':\"Rain volume for the last 1 hour, mm\",\n                '3h':\"Rain volume for the last 3 hours, mm\",\n                '1h':\"Snow volume for the last 1 hour, mm\",\n                '3h':\"Snow volume for the last 3 hours, mm\",\n                dt:\"Time of data calculation\",\n                message:\"Internal parameter\",\n                country:\"Country code (GB, JP etc.)\",\n                name:\"City name\",\n                coord:\"Coordinates from the specified location (latitude, longitude)\",\n                aqi:'Air Quality Index. Possible values: 1, 2, 3, 4, 5. Where 1 = Good, 2 = Fair, 3 = Moderate, 4 = Poor, 5 = Very Poor.',\n                no:'Сoncentration of NO (Nitrogen monoxide), μg/m3',\n                no2:'Сoncentration of NO2 (Nitrogen dioxide), μg/m3',\n                o3:'Сoncentration of O3 (Ozone), μg/m3',\n                so2:'Сoncentration of SO2 (Sulphur dioxide), μg/m3',\n                pm2_5:'Сoncentration of PM2.5 (Fine particles matter), μg/m3',\n                pm10:'Сoncentration of PM10 (Coarse particulate matter), μg/m3',\n                nh3:'Сoncentration of NH3 (Ammonia), μg/m3',\n                name:\"Name of the found location\",\n                lat:\"Geographical coordinates of the found location (latitude)\",\n                lon:\"Geographical coordinates of the found location (longitude)\",\n                country:\"Country of the found location\",\n                state:\"(where available) State of the found location\",\n                zip:\"Specified zip/post code in the API request\"\n              }\n\nexport default info;\n","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/toggleDropdown.js",[],"/Users/kottedheeru/Documents/InformationHubFrontend/src/components/Select.js",["204"],"\nexport default function(){\n  return (\n    <svg id=\"bebdbc02-5f56-4bd5-9ad9-bce5f07a2c3e\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"500\" height=\"783.89357\" viewBox=\"0 0 933.44272 783.89357\">\n      <title>lists</title><path\n        d=\"M627.33188,841.14167c0,15.28692-94.57823,27.67192-211.44706,27.7519h-1.06254c-57.04625,0-108.84836-2.93629-147.02008-7.7006-1.6338-.21709-3.2448-.42273-4.82149-.63981-6.48953-.8569-12.55633-1.78234-18.1433-2.74209-26.70079-4.65009-42.52473-10.41982-42.52473-16.6694,0-5.06144,10.35127-9.79144,28.43745-13.8817,9.55149-2.15939,21.25094-4.1245,34.73271-5.86116q3.719-.497,7.63206-.93688c37.60053-4.39869,87.26605-7.07223,141.70738-7.07223,10.57979,0,20.98817.10286,31.15667.29707C548.56622,815.65188,627.33188,827.19142,627.33188,841.14167Z\"\n        transform=\"translate(-73.77864 -85)\"\n        fill=\"#3f3d56\"/><rect x=\"617.70498\" y=\"416.06562\" width=\"314.75413\" height=\"161.31149\" fill=\"#f2f2f2\"/><rect x=\"226.22953\" y=\"0.98361\" width=\"314.75413\" height=\"161.31149\" fill=\"#f2f2f2\"/><path d=\"M615.74591,248.27871H299.02457V85H615.74591Zm-314.75413-1.96722H613.7787V86.96721H300.99178Z\" transform=\"translate(-73.77864 -85)\" fill=\"#6c63ff\"/><rect x=\"617.70498\" y=\"0.98361\" width=\"314.75413\" height=\"161.31149\" fill=\"#f2f2f2\"/><rect x=\"226.22953\" y=\"208.52461\" width=\"314.75413\" height=\"161.31149\" fill=\"#f2f2f2\"/><rect x=\"617.70498\" y=\"208.52461\" width=\"314.75413\" height=\"161.31149\" fill=\"#f2f2f2\"/><rect x=\"226.22953\" y=\"416.06562\" width=\"314.75413\" height=\"161.31149\" fill=\"#f2f2f2\"/><circle cx=\"40.32787\" cy=\"81.63935\" r=\"40.32787\" fill=\"#f2f2f2\"/><path\n        d=\"M227.22128,126.31148a40.32788,40.32788,0,1,0,40.32787,40.32787A40.32787,40.32787,0,0,0,227.22128,126.31148Zm17.47631,55.31058-3.47721,3.47721-14.4909-14.49091-14.49091,14.49091-3.47721-3.47721,14.49091-14.4909L206.79415,150.673l3.4772-3.4772L226.72948,163.654l16.45812-16.45812,3.4772,3.4772-16.45812,16.45813Z\"\n        transform=\"translate(-73.77864 -85)\"\n        fill=\"#f2f2f2\"/><polygon points=\"36.256 100.783 17.71 76.237 21.634 73.271 36.531 92.988 78.311 45.105 82.017 48.338 36.256 100.783\" fill=\"#6c63ff\"/><path\n        d=\"M580.49352,662.04422q-19.18523-3.25031-36.90106-5.58273l4.669-9.05252c-1.57439-.54682-8.49144,4.63729-8.49144,4.63729l6.1273-26.27728c-7.9182.9549-11.9441,27.78561-11.9441,27.78561l-8.84669-9.07128,4.283,10.1985a816.82143,816.82143,0,0,0-93.62328-5.89217l3.99619-7.748c-1.57439-.54682-8.49144,4.63729-8.49144,4.63729l6.12729-26.27729c-7.91819.95491-11.9441,27.78562-11.9441,27.78562l-8.84668-9.07129,4.53634,10.80189a525.9061,525.9061,0,0,0-53.82008,3.65579c4.042-12.07,17.7728-23.54953,17.7728-23.54953-10.48615,3.11875-15.98671,8.34487-18.86091,13.21713a211.63887,211.63887,0,0,1,12.23271-73.124s-21.67451,47.16568-18.90888,78.82526l.33079,5.62183c-18.3751,2.63107-25.60407,8.81279-25.60407,8.81279Z\"\n        transform=\"translate(-73.77864 -85)\"\n        fill=\"#3f3d56\"/><circle cx=\"355.70497\" cy=\"255.58758\" r=\"34.78687\" fill=\"#ff6584\"/><polygon points=\"728.996 475.767 724.918 472.504 747.757 452.112 805.67 452.112 805.67 470.057 768.149 495.343 728.996 475.767\" fill=\"#3f3d56\"/><polygon points=\"816.229 463.551 816.229 452.52 808.54 452.52 808.54 455.221 805.67 452.112 786.909 472.504 779.568 477.398 768.186 560.56 785.352 577.726 825.246 577.726 825.246 473.32 816.229 463.551\" fill=\"#ccc\"/><rect x=\"724.91811\" y=\"472.50395\" width=\"61.99121\" height=\"105.22193\" fill=\"#f2f2f2\"/><rect x=\"748.98049\" y=\"552.03216\" width=\"11.41943\" height=\"25.69373\" fill=\"#ccc\"/><polygon points=\"736.745 559.373 736.745 555.295 731.851 555.295 731.851 559.373 736.338 559.373 736.745 559.373\" fill=\"#3f3d56\"/><polygon points=\"736.338 562.636 731.851 562.636 731.851 566.714 736.745 566.714 736.745 562.636 736.338 562.636\" fill=\"#3f3d56\"/><rect x=\"740.00807\" y=\"555.29485\" width=\"4.89404\" height=\"4.07837\" fill=\"#3f3d56\"/><rect x=\"740.00807\" y=\"562.63592\" width=\"4.89404\" height=\"4.07837\" fill=\"#3f3d56\"/><polygon points=\"770.188 559.373 770.188 555.295 765.294 555.295 765.294 559.373 769.78 559.373 770.188 559.373\" fill=\"#3f3d56\"/><polygon points=\"769.78 562.636 765.294 562.636 765.294 566.714 770.188 566.714 770.188 562.636 769.78 562.636\" fill=\"#3f3d56\"/><rect x=\"773.4507\" y=\"555.29485\" width=\"4.89404\" height=\"4.07837\" fill=\"#3f3d56\"/><rect x=\"773.4507\" y=\"562.63592\" width=\"4.89404\" height=\"4.07837\" fill=\"#3f3d56\"/><polygon points=\"804.446 477.806 804.446 473.727 799.552 473.727 799.552 477.806 804.038 477.806 804.446 477.806\" fill=\"#3f3d56\"/><polygon points=\"804.038 481.069 799.552 481.069 799.552 485.147 804.446 485.147 804.446 481.069 804.038 481.069\" fill=\"#3f3d56\"/><rect x=\"807.709\" y=\"473.72747\" width=\"4.89404\" height=\"4.07837\" fill=\"#3f3d56\"/><rect x=\"807.709\" y=\"481.06853\" width=\"4.89404\" height=\"4.07837\" fill=\"#3f3d56\"/><polygon points=\"804.446 500.645 804.446 496.566 799.552 496.566 799.552 500.645 804.038 500.645 804.446 500.645\" fill=\"#3f3d56\"/><polygon points=\"804.038 503.907 799.552 503.907 799.552 507.986 804.446 507.986 804.446 503.907 804.038 503.907\" fill=\"#3f3d56\"/><rect x=\"807.709\" y=\"496.56633\" width=\"4.89404\" height=\"4.07837\" fill=\"#3f3d56\"/><rect x=\"807.709\" y=\"503.9074\" width=\"4.89404\" height=\"4.07837\" fill=\"#3f3d56\"/><polygon points=\"804.446 523.484 804.446 519.405 799.552 519.405 799.552 523.484 804.038 523.484 804.446 523.484\" fill=\"#3f3d56\"/><polygon points=\"804.038 526.746 799.552 526.746 799.552 530.825 804.446 530.825 804.446 526.746 804.038 526.746\" fill=\"#3f3d56\"/><rect x=\"807.709\" y=\"519.4052\" width=\"4.89404\" height=\"4.07837\" fill=\"#3f3d56\"/><rect x=\"807.709\" y=\"526.74627\" width=\"4.89404\" height=\"4.07837\" fill=\"#3f3d56\"/><polygon points=\"804.446 546.322 804.446 542.244 799.552 542.244 799.552 546.322 804.038 546.322 804.446 546.322\" fill=\"#3f3d56\"/><polygon points=\"804.038 549.585 799.552 549.585 799.552 553.664 804.446 553.664 804.446 549.585 804.038 549.585\" fill=\"#3f3d56\"/><rect x=\"807.709\" y=\"542.24407\" width=\"4.89404\" height=\"4.07837\" fill=\"#3f3d56\"/><rect x=\"807.709\" y=\"549.58514\" width=\"4.89404\" height=\"4.07837\" fill=\"#3f3d56\"/><rect x=\"731.85133\" y=\"477.80583\" width=\"47.30908\" height=\"9.78809\" fill=\"#3f3d56\"/><rect x=\"731.85133\" y=\"497.38201\" width=\"47.30908\" height=\"9.78809\" fill=\"#3f3d56\"/><rect x=\"731.85133\" y=\"516.95818\" width=\"47.30908\" height=\"9.78809\" fill=\"#3f3d56\"/><rect x=\"731.85133\" y=\"536.53435\" width=\"47.30908\" height=\"9.78809\" fill=\"#3f3d56\"/><polygon\n        points=\"355.902 469.793 397.421 469.793 397.421 459.771 420.328 459.771 420.328 469.793 463.279 469.793 463.279 514.176 420.328 514.176 420.328 570.012 397.421 570.012 397.421 514.176 355.902 514.176 334.426 489.837 355.902 469.793\"\n        fill=\"#3f3d56\"/><path d=\"M551.81148,454.8361h-1.96722a96.39345,96.39345,0,1,0-192.7869,0h-1.96721a98.36067,98.36067,0,0,1,196.72133,0Z\" transform=\"translate(-73.77864 -85)\" fill=\"#3f3d56\"/><rect x=\"404.17666\" y=\"355.98722\" width=\"2.51384\" height=\"99.29687\" transform=\"matrix(1, -0.00188, 0.00188, 1, -74.53899, -84.23861)\" fill=\"#3f3d56\"/><path d=\"M429.821,368.59564c.22517,34.72128-24.15028,63.0277-24.15028,63.0277s-24.74052-27.98789-24.96569-62.70917,24.15027-63.0277,24.15027-63.0277S429.59582,333.87436,429.821,368.59564Z\" transform=\"translate(-73.77864 -85)\" fill=\"#6c63ff\"/><path d=\"M429.821,368.59564c.22517,34.72128-24.15028,63.0277-24.15028,63.0277s-24.74052-27.98789-24.96569-62.70917,24.15027-63.0277,24.15027-63.0277S429.59582,333.87436,429.821,368.59564Z\" transform=\"translate(-73.77864 -85)\" opacity=\"0.1\"/><rect x=\"371.49674\" y=\"356.04854\" width=\"2.51384\" height=\"99.29687\" transform=\"matrix(1, -0.00188, 0.00188, 1, -74.53916, -84.29992)\" fill=\"#3f3d56\"/><path d=\"M397.14106,368.657c.22518,34.72128-24.15027,63.0277-24.15027,63.0277s-24.74052-27.9879-24.96569-62.70918,24.15027-63.0277,24.15027-63.0277S396.91589,333.93568,397.14106,368.657Z\" transform=\"translate(-73.77864 -85)\" fill=\"#6c63ff\"/><rect x=\"465.54425\" y=\"291.88024\" width=\"1.99013\" height=\"78.61032\" fill=\"#3f3d56\"/><path d=\"M559.67971,386.89823c.12669,27.48807-19.21262,49.86116-19.21262,49.86116s-19.54472-22.19388-19.67141-49.68195,19.21263-49.86116,19.21263-49.86116S559.553,359.41015,559.67971,386.89823Z\" transform=\"translate(-73.77864 -85)\" fill=\"#6c63ff\"/><circle cx=\"770.60875\" cy=\"291.63937\" r=\"68.40773\" fill=\"#3f3d56\"/><polygon points=\"777.45 266.171 777.45 294.807 735.823 294.807 728.132 304.034 729.01 294.807 725.269 294.807 725.269 266.171 777.45 266.171\" fill=\"#6c63ff\"/><rect x=\"758.67717\" y=\"276.03476\" width=\"18.77235\" height=\"18.77235\" opacity=\"0.1\"/><polygon points=\"762.813 280.171 814.994 280.171 814.994 308.807 811.252 308.807 812.131 318.034 804.441 308.807 762.813 308.807 762.813 280.171\" fill=\"#6c63ff\"/><ellipse cx=\"728.4505\" cy=\"307.53414\" rx=\"11.45432\" ry=\"1.11749\" opacity=\"0.1\"/><ellipse cx=\"812.13065\" cy=\"322.48838\" rx=\"13.04519\" ry=\"1.2727\" opacity=\"0.1\"/><path\n        d=\"M883.2215,106.0316H838.018a9.60936,9.60936,0,0,0-9.37409,7.496L805.80347,214.83763a7.76645,7.76645,0,0,0,7.1941,9.46513l46.46951,2.28955a10.2603,10.2603,0,0,0,10.60137-8.42156l12.95649-71.62734.9639.2754,2.47911-13.57606-.99221-.24805,3.61661-19.99376A5.91643,5.91643,0,0,0,883.2215,106.0316Z\"\n        transform=\"translate(-73.77864 -85)\"\n        fill=\"#3f3d56\"/><path\n        d=\"M843.969,108.21557h-5.27661a6.64081,6.64081,0,0,0-6.48818,5.22521l-21.92367,100.4835a4.11488,4.11488,0,0,0,3.75119,4.98323l46.31918,3.03571a5.32916,5.32916,0,0,0,5.59329-4.37305l18.70761-103.85948a4.66768,4.66768,0,0,0-4.59375-5.49512h-5.00569a2.20288,2.20288,0,0,0-2.12714,1.6302h0a1.94476,1.94476,0,0,1-1.87789,1.43917h-23.7638a3.32434,3.32434,0,0,1-3.31454-3.06937Z\"\n        transform=\"translate(-73.77864 -85)\"\n        fill=\"#6c63ff\"/><circle cx=\"389.94677\" cy=\"81.78849\" r=\"65.46092\" fill=\"#6c63ff\"/><path\n        d=\"M520.72517,207.888c-12.56848.00078-40.32306-12.90833-65.00687-28.02709-30.63032-18.761-60.3785-43.28289-55.17787-51.77425,1.47-2.39963,5.11342-3.02717,11.14053-1.92079l-.43212,2.35291c-4.66729-.85879-7.82566-.559-8.66849.81675-1.2294,2.00722,1.48128,7.83423,12.77519,18.16852,10.29225,9.41867,25.07038,20.18508,41.61241,30.31694,16.54164,10.13186,32.84776,18.40443,45.91376,23.294,14.33783,5.36608,20.76007,5.13172,21.9887,3.12606.844-1.37811-.32857-4.33132-3.21755-8.10362l1.899-1.45441c3.73063,4.87167,4.82923,8.40649,3.35847,10.8069C525.90049,207.139,523.75351,207.888,520.72517,207.888Z\"\n        transform=\"translate(-73.77864 -85)\"\n        fill=\"#3f3d56\"/><circle cx=\"381.86671\" cy=\"48.14092\" r=\"13.38973\" fill=\"#fff\"/><circle cx=\"385.74494\" cy=\"121.54293\" r=\"8.92649\" fill=\"#fff\"/><circle cx=\"416.48373\" cy=\"90.94044\" r=\"8.92649\" fill=\"#fff\"/><path d=\"M1007.22136,663.36071H690.5V500.082h316.72134ZM692.46723,661.3935h312.78692V502.04922H692.46723Z\" transform=\"translate(-73.77864 -85)\" fill=\"#6c63ff\"/><path d=\"M1005.25415,456.80332H688.5328V293.52461h316.72135ZM690.5,454.8361h312.78691V295.49182H690.5Z\" transform=\"translate(-73.77864 -85)\" fill=\"#6c63ff\"/><path d=\"M298.18879,805.30317c5.36982,19.85008,23.76267,32.14374,23.76267,32.14374s9.68665-19.88969,4.31683-39.73977-23.76267-32.14374-23.76267-32.14374S292.819,785.45308,298.18879,805.30317Z\" transform=\"translate(-73.77864 -85)\" fill=\"#3f3d56\"/><path d=\"M306.07936,801.03717c14.73487,14.3438,16.53462,36.39356,16.53462,36.39356s-22.09018-1.20614-36.825-15.54994-16.53463-36.39355-16.53463-36.39355S291.34449,786.69337,306.07936,801.03717Z\" transform=\"translate(-73.77864 -85)\" fill=\"#6c63ff\"/><path\n        d=\"M357.556,528.63387l-15.70335,1.74482s-6.97927,31.4067,0,73.28231S357.556,687.41221,357.556,687.41221s6.97927,136.09571,10.4689,137.84053,34.89634,12.21372,36.64115,1.74482,1.74482-249.50882,1.74482-249.50882l24.42744,115.15792s3.48963,144.8198,10.4689,144.8198,29.66188-1.74482,29.66188-13.95854S476.20354,650.771,476.20354,650.771s-1.74481-118.64754-8.72408-122.13718S357.556,528.63387,357.556,528.63387Z\"\n        transform=\"translate(-73.77864 -85)\"\n        fill=\"#2f2e41\"/><path d=\"M371.51453,820.01829s-15.70335-1.74482-19.193,0-8.72409,13.95853,0,20.9378,31.4067,17.44817,38.386,17.44817,13.95853-3.48963,13.95853-3.48963l-3.48963-29.66189Z\" transform=\"translate(-73.77864 -85)\" fill=\"#2f2e41\"/><path d=\"M441.30721,828.74237l1.74481,24.42744s22.68262,3.48963,24.42744,0,19.193-12.21372,20.9378-13.95854,3.48964-20.9378-6.97926-22.68262-13.95854,3.48964-13.95854,3.48964Z\" transform=\"translate(-73.77864 -85)\" fill=\"#2f2e41\"/><path\n        d=\"M481.85415,321.01532s38.147-24.53087,37.26414-41.38406-23.87951-69.9918-23.87951-69.9918-17.99016-37.4032-25.14209-22.11729,9.39989,31.55733,9.39989,31.55733l10.6833,52.12683-29.03429,27.69849Z\"\n        transform=\"translate(-73.77864 -85)\"\n        fill=\"#a0616a\"/><circle cx=\"313.43924\" cy=\"169.69762\" r=\"31.4067\" fill=\"#a0616a\"/><path d=\"M371.51453,273.89061l5.23445,33.15152,38.386-6.97927s-1.74481-33.15152-1.74481-36.64115S371.51453,273.89061,371.51453,273.89061Z\" transform=\"translate(-73.77864 -85)\" fill=\"#a0616a\"/><path\n        d=\"M369.76972,307.04213s43.62042-10.4689,48.85487-6.97927,31.4067,6.97927,31.4067,6.97927l29.66189,45.36524-8.72409,57.57895s-1.74481,92.4753,1.74482,108.17865,22.68262,17.44817-17.44817,20.9378-47.11-1.74481-75.02712,5.23445-50.59969-3.48963-43.62042-10.4689,19.193-118.64754,5.23445-129.11645-19.193-64.55822-19.193-64.55822S369.76972,315.76621,369.76972,307.04213Z\"\n        transform=\"translate(-73.77864 -85)\"\n        fill=\"#3f3d56\"/><path d=\"M444.79684,312.27658l5.23445-5.23445,10.4689-10.4689s34.02393,14.83094,32.27912,20.06539-13.08613,35.76875-13.08613,35.76875l-15.70335,5.23445Z\" transform=\"translate(-73.77864 -85)\" fill=\"#3f3d56\"/><path\n        d=\"M398.17835,216.64808l-.32186-2.51594a19.77829,19.77829,0,0,0-6.2856.9877,10.32665,10.32665,0,0,1,.388-4.52107,20.103,20.103,0,0,0-5.81783,2.52934l-1.26884-4.59162-17.4426,8.59632c-6.26123,3.08575-12.86249,6.47669-16.44172,12.46952-3.99031,6.68112-3.29591,15.26752-.56816,22.55582s7.26036,13.73814,10.89358,20.62a51.51652,51.51652,0,0,0,4.95064,8.426c6.58389,8.20751,19.3997,9.86569,28.68263,4.91211,3.42591-1.82815,6.53859-4.56058,7.948-8.17894.84275-2.16359,1.03547-4.51792,1.58763-6.77324,1.14826-4.69012,2.48122-14.37168,6.29067-17.3388,1.67631-1.30565,4.99988,3.02263,6.389,1.41483,3.5699-4.13179,2.82068-10.5038.60359-15.494a113.05265,113.05265,0,0,0-7.4426-14.51667C409.125,223.35867,398.13974,216.3463,398.17835,216.64808Z\"\n        transform=\"translate(-73.77864 -85)\"\n        fill=\"#2f2e41\"/><path\n        d=\"M294.74259,382.06926S252.867,422.2,258.10144,443.13785s47.11005,82.00639,47.11005,82.00639,40.13079,20.9378,45.36524,0-27.91707-15.70335-27.91707-15.70335l-26.17225-62.81341,29.66188-41.87561Z\"\n        transform=\"translate(-73.77864 -85)\"\n        fill=\"#a0616a\"/><path d=\"M343.59746,343.68328l-20.9378-3.48963s-15.70335,17.44817-20.9378,24.42744-15.70335,24.42743-15.70335,24.42743l36.64115,26.17226,27.91707-29.66189Z\" transform=\"translate(-73.77864 -85)\" fill=\"#3f3d56\"/></svg>\n  );\n}\n","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/weather/Select.js",["205"],"\n\nexport default function(){\n  return (\n    <svg id=\"a13970f5-fcb6-45bc-88b6-f9395b0a599f\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"400\" height=\"500\" viewBox=\"0 0 902.41854 826.20679\"><path\n      d=\"M726.94952,696.70767l8.67165,19.44392c-7.04887-1.12221-13.60391,4.89778-13.75121,12.62878s6.13979,15.77421,13.18911,16.8731c-1.34708,6.00231-7.16088,8.64855-12.20732,11.07451s-10.48544,6.44956-10.11,12.84517c.30146,5.13535,4.548,9.66922,9.05769,11.49215s9.24135,1.54272,13.80858,1.23684c-6.921,7.23984-7.59561,20.84776-1.51747,30.61081s18.21665,14.56912,27.30539,10.8112c-6.42186,7.98853-5.02668,22.61792,2.94328,30.86218,8.03432,8.31083,19.678,9.11525,29.85706,8.23972a132.23791,132.23791,0,0,0,71.00684-28.14c7.78173-6.1834,15.05042-13.45556,19.48953-22.94127s5.747-21.49572,1.61222-32.29045c1.1152,13.52239,14.64995,24.20276,26.82589,24.80038s22.80664-6.26052,31.84054-14.08111c12.014-10.40049,23.13736-24.9791,21.48841-42.967-.81631-8.90487-4.70578-17.46936-8.52054-25.765l-7.39565-16.08273c-2.98571-6.49278-6.03914-13.09517-10.53293-18.54375s-10.73125-9.66651-16.97307-9.62643c1.42718-6.5202,2.86077-13.28339,1.66478-20.211s-5.77577-14.10054-12.00424-15.72285c-7.92682-2.06468-14.6448,5.25038-22.6158,4.56081-7.67069-.6636-14.01-8.362-21.45871-11.4124a17.17785,17.17785,0,0,0-18.53718,3.20639c-4.722,4.6097-6.69032,12.39794-4.99586,19.76719,1.48435,6.45545,5.43465,12.14909,7.83232,18.37489s2.76983,14.231-1.8351,17.63129c-5.55664,4.103-14.01442-1.48021-18.35566-8.23484s-6.83379-14.93336-12.32361-20.614c-6.47924-6.70451-16.62148-8.27573-23.29257-3.60845s-9.22234,15.11922-5.85919,24.00383c2.74987,7.26449,9.04909,14.6135,6.86437,21.45428-2.309,7.2298-12.41262,6.31432-18.50707,1.20471s-10.14111-12.8059-16.16143-18.03027c-6.114-5.30562-14.09812-7.63035-21.10721-6.14573a21.73057,21.73057,0,0,0-15.57311,13.9151\"\n      transform=\"translate(-148.79073 -36.89661)\"\n      fill=\"#e6e6e6\"/><path\n      d=\"M867.34667,642.06633l-17.99256,8.35958a13.81228,13.81228,0,0,1-8.73392,1.17747c-2.61209-.61776-4.37716-2.21477-4.84109-4.3833l-4.18659-19.55422c-.7905-3.68869,2.26453-8.05314,7.26376-10.37585l9.93652-4.61663c4.99924-2.32271,10.305-1.8428,12.61429,1.14024l12.24431,15.81049c1.35812,1.75309,1.4403,4.132.22783,6.52669A13.81219,13.81219,0,0,1,867.34667,642.06633Z\"\n      transform=\"translate(-148.79073 -36.89661)\"\n      fill=\"#3f3d56\"/><path\n      d=\"M309.43024,280.65881A353.9984,353.9984,0,0,1,386.93192,156.602c29.00636-30.1117,74.15027-28.86051,74.15027-28.86051l.25785-.32A87.58018,87.58018,0,0,1,553.89276,98.509c4.30426,1.23514,7.615,1.78263,9.18943,1.23249,28.70712-10.04708,27.35834-32.72422,52.12616-50.99278,43.367-31.98718,187.21094,4.6535,207.4942,63.51371,16.43915,47.70488,89.82021,70.827,117.23582,107.31737q6.43059,8.55861,12.618,17.31558,2.90129,4.06824,5.73748,8.19783a730.4283,730.4283,0,0,1,52.14714,88.15542,514.11313,514.11313,0,0,1,26.10088,61.68445c28.591,83.58209,18.8138,145.8549-60.021,130.47014q-13.99815-2.739-27.32378-4.90113-19.2962-3.14892-37.24641-5.17566-24.17227-2.74893-45.99366-3.60217-7.33723-.29524-14.40509-.39579c-69.67037-.966-121.34893,12.1465-160.719,32.50168q-10.01082,5.16279-18.97332,10.92332a236.05444,236.05444,0,0,0-26.08005,19.31927,254.89837,254.89837,0,0,0-31.42249,32.19714l-.52216.6393c-46.04826,56.326-61.203,118.68168-93.23451,129.6607C383.67414,783.51013,297.07405,613.35008,288.193,446.896q-.67263-12.58159-.74315-25.09128-.04163-5.59155.055-11.15359c.14052-9.67346.567-19.28471,1.28114-28.7797q.40006-5.44542.92807-10.83322c.3879-3.87342.80989-7.72368,1.2976-11.54982C294.49493,331.442,300.58862,304.75806,309.43024,280.65881Z\"\n      transform=\"translate(-148.79073 -36.89661)\"\n      fill=\"#6c63ff\"/><path\n      d=\"M733.83354,372.24025c-10.93522,5.09113-11.11539,27.895-7.68649,35.28386l6.21383,13.37421,39.60938-18.403-6.21383-13.37421C762.32083,381.73531,744.77678,367.16636,733.83354,372.24025Z\"\n      transform=\"translate(-148.79073 -36.89661)\"\n      fill=\"#3f3d56\"/><path\n      d=\"M627.39274,564.25616a4.33285,4.33285,0,0,1-4.06983-5.81934,4.29966,4.29966,0,0,1,2.24317-2.44043L830.11979,460.9583a4.33007,4.33007,0,0,1,5.752,2.10157,4.33573,4.33573,0,0,1-2.10254,5.752h-.00049L629.215,563.84991A4.30619,4.30619,0,0,1,627.39274,564.25616Z\"\n      transform=\"translate(-148.79073 -36.89661)\"\n      fill=\"#3f3d56\"/><rect x=\"771.78772\" y=\"414.47433\" width=\"64.47381\" height=\"217.68038\" transform=\"translate(-294.43392 350.60655) rotate(-24.9202)\" fill=\"#e6e6e6\"/><path\n      d=\"M567.90452,162.51413c-10.93522,5.09113-11.11539,27.895-7.68649,35.28386l6.21383,13.37421,39.60938-18.403L599.82741,179.395C596.39181,172.00919,578.84776,157.44024,567.90452,162.51413Z\"\n      transform=\"translate(-148.79073 -36.89661)\"\n      fill=\"#3f3d56\"/><path\n      d=\"M812.91932,664.76078l-17.99256,8.35958a13.81216,13.81216,0,0,1-8.73392,1.17747c-2.6121-.61775-4.37717-2.21476-4.84109-4.3833l-4.1866-19.55421c-.79049-3.68869,2.26453-8.05314,7.26377-10.37585l9.93651-4.61664c4.99924-2.32271,10.305-1.8428,12.6143,1.14025L819.224,652.31857c1.35811,1.75309,1.4403,4.132.22783,6.52668A13.81219,13.81219,0,0,1,812.91932,664.76078Z\"\n      transform=\"translate(-148.79073 -36.89661)\"\n      fill=\"#3f3d56\"/><path\n      d=\"M757.60057,692.20652,739.608,700.5661a13.81222,13.81222,0,0,1-8.73392,1.17747c-2.6121-.61776-4.37716-2.21476-4.84109-4.3833l-4.18659-19.55422c-.7905-3.68869,2.26452-8.05313,7.26376-10.37584l9.93652-4.61664c4.99923-2.32271,10.305-1.8428,12.61429,1.14024l12.24431,15.8105c1.35811,1.75308,1.4403,4.132.22783,6.52668A13.81219,13.81219,0,0,1,757.60057,692.20652Z\"\n      transform=\"translate(-148.79073 -36.89661)\"\n      fill=\"#3f3d56\"/><rect x=\"668.30169\" y=\"227.97831\" width=\"64.47381\" height=\"440.01582\" transform=\"translate(-272.32893 299.98873) rotate(-24.9202)\" fill=\"#e6e6e6\"/><polyline points=\"548.951 403.691 542.39 389.254 546.167 387.512 552.708 401.903 647.423 611.909 643.65 613.662\" fill=\"#3f3d56\"/><polyline points=\"622.951 391.691 616.39 377.254 620.167 375.512 626.708 389.903 721.423 599.909 717.65 601.662\" fill=\"#3f3d56\"/><path\n      d=\"M664.67094,266.81383l-79.22567,36.80928c-5.044-7.84723-20.24939-48.06017-16.83519-59.99122l-2.56272-11.37766,54.70348-25.416,7.32219,9.00725C638.94215,219.18044,660.10154,256.95133,664.67094,266.81383Z\"\n      transform=\"translate(-148.79073 -36.89661)\"\n      fill=\"#e6e6e6\"/><path\n      d=\"M623.03676,207.325l-56.45093,26.22784c-2.08362.968-4.30262.61217-4.95626-.79495a1.95213,1.95213,0,0,1-.17209-.6429l-2.92164-31.16788c-.1251-1.33466,1.01667-2.84708,2.76109-3.65756L598.73374,179.896c1.74442-.81048,3.63664-.70769,4.576.24866l21.93586,22.33363c1.12192,1.14229.51268,3.09757-1.36081,4.36726A6.08075,6.08075,0,0,1,623.03676,207.325Z\"\n      transform=\"translate(-148.79073 -36.89661)\"\n      fill=\"#e6e6e6\"/><path\n      d=\"M667.31315,451.514a7.62608,7.62608,0,0,1-1.814-.21387,5.60386,5.60386,0,0,1-3.89648-3.02539L627.09,373.992c-1.42822-3.0752.48926-7.00782,4.27442-8.76661l50.53613-23.48c3.78564-1.75976,8.02734-.6875,9.45654,2.38721l34.5127,74.2832a5.60256,5.60256,0,0,1-.20069,4.92872,8.50632,8.50632,0,0,1-4.07422,3.83789l-50.53564,23.479A8.9197,8.9197,0,0,1,667.31315,451.514Z\"\n      transform=\"translate(-148.79073 -36.89661)\"\n      fill=\"#3f3d56\"/><rect x=\"658.61223\" y=\"466.20786\" width=\"64.47381\" height=\"217.68038\" transform=\"translate(-326.76927 307.73605) rotate(-24.9202)\" fill=\"#e6e6e6\"/><path\n      d=\"M602.18887,210.58118l-17.14693,7.9667c-3.30882,1.53733-7.77287-1.02438-9.94972-5.70968s-1.25568-9.74905,2.05314-11.28637l17.14693-7.9667c3.30882-1.53733,7.77287,1.02438,9.94972,5.70968S605.4977,209.04386,602.18887,210.58118Z\"\n      transform=\"translate(-148.79073 -36.89661)\"\n      fill=\"#3f3d56\"/><path\n      d=\"M621.79921,423.44358c-10.93522,5.09113-11.11539,27.895-7.68649,35.28386l6.21383,13.37421,39.60938-18.403L653.7221,440.3244C650.2865,432.93864,632.74245,418.36969,621.79921,423.44358Z\"\n      transform=\"translate(-148.79073 -36.89661)\"\n      fill=\"#3f3d56\"/><path d=\"M440.1517,377.92488c-3.862,2.57319-7.8147-3.55124-3.87848-6.01018C440.135,369.34165,444.08773,375.46609,440.1517,377.92488Z\" transform=\"translate(-148.79073 -36.89661)\" fill=\"#e6e6e6\"/><path d=\"M842.1517,289.92488c-3.862,2.57319-7.8147-3.55124-3.87848-6.01018C842.135,281.34165,846.08773,287.46609,842.1517,289.92488Z\" transform=\"translate(-148.79073 -36.89661)\" fill=\"#e6e6e6\"/><path d=\"M568.1517,359.92488c-3.862,2.57319-7.8147-3.55124-3.87848-6.01018C568.135,351.34165,572.08773,357.46609,568.1517,359.92488Z\" transform=\"translate(-148.79073 -36.89661)\" fill=\"#e6e6e6\"/><path d=\"M440.1517,599.92488c-3.862,2.57319-7.8147-3.55124-3.87848-6.01018C440.135,591.34165,444.08773,597.46609,440.1517,599.92488Z\" transform=\"translate(-148.79073 -36.89661)\" fill=\"#e6e6e6\"/><path d=\"M637.1517,98.92488c-3.862,2.57319-7.8147-3.55124-3.87848-6.01018C637.135,90.34165,641.08773,96.46609,637.1517,98.92488Z\" transform=\"translate(-148.79073 -36.89661)\" fill=\"#e6e6e6\"/><path d=\"M447.1517,216.92488c-3.862,2.57319-7.8147-3.55124-3.87848-6.01018C447.135,208.34165,451.08773,214.46609,447.1517,216.92488Z\" transform=\"translate(-148.79073 -36.89661)\" fill=\"#e6e6e6\"/><polygon points=\"571.639 146.2 569.182 145.661 569.72 143.203 568.082 142.844 567.543 145.302 565.086 144.764 564.727 146.402 567.184 146.941 566.646 149.398 568.284 149.757 568.823 147.299 571.28 147.838 571.639 146.2\" fill=\"#e6e6e6\"/><polygon points=\"171.542 350.978 169.085 350.439 169.623 347.982 167.985 347.623 167.446 350.08 164.988 349.542 164.629 351.18 167.087 351.719 166.549 354.177 168.187 354.535 168.726 352.078 171.183 352.616 171.542 350.978\" fill=\"#e6e6e6\"/><path d=\"M824.22,492.33287a8.50983,8.50983,0,0,1-11.29014-4.12709l-10.11253-21.7655a8.5,8.5,0,0,1,15.41723-7.163l10.11253,21.76549A8.50983,8.50983,0,0,1,824.22,492.33287Z\" transform=\"translate(-148.79073 -36.89661)\" fill=\"#3f3d56\"/><path d=\"M652.22,572.33287a8.50983,8.50983,0,0,1-11.29014-4.12709l-10.11253-21.7655a8.5,8.5,0,0,1,15.41723-7.163l10.11253,21.76549A8.50983,8.50983,0,0,1,652.22,572.33287Z\" transform=\"translate(-148.79073 -36.89661)\" fill=\"#3f3d56\"/><path\n      d=\"M808.64176,444.7781l-67.80585,31.50349c-4.317-6.71611-17.33058-41.13265-14.40852-51.34393l1.43426-11.42307,40.48614-19.86306,8.9714,7.505C789.95914,396.88314,808.53922,428.20455,808.64176,444.7781Z\"\n      transform=\"translate(-148.79073 -36.89661)\"\n      fill=\"#e6e6e6\"/><path\n      d=\"M777.16178,442.59376l-17.14693,7.96671c-3.30882,1.53733-8.34353-2.25264-11.22164-8.44728s-2.52761-12.48665.78121-14.024l17.14693-7.96671c3.30882-1.53732,8.34353,2.25264,11.22164,8.44728S780.4706,441.05644,777.16178,442.59376Z\"\n      transform=\"translate(-148.79073 -36.89661)\"\n      fill=\"#3f3d56\"/><polyline points=\"482.951 446.691 476.39 432.254 480.167 430.512 486.708 444.903 581.423 654.909 577.65 656.662\" fill=\"#3f3d56\"/><path\n      d=\"M696.60745,495.98143l-67.8059,31.50349c-10.00311-5.16492-25.29108-38.961-14.40851-51.34394l1.43428-11.42306,40.48614-19.86306,8.9714,7.505C674.58727,455.214,692.6967,487.54053,696.60745,495.98143Z\"\n      transform=\"translate(-148.79073 -36.89661)\"\n      fill=\"#e6e6e6\"/><path\n      d=\"M663.73193,490.79348l-17.14693,7.9667c-3.30882,1.53733-8.03047-1.57883-10.52388-6.94547s-1.82985-10.98484,1.479-12.52216l17.14693-7.96671c3.30882-1.53732,8.03047,1.57884,10.52388,6.94547S667.04075,489.25615,663.73193,490.79348Z\"\n      transform=\"translate(-148.79073 -36.89661)\"\n      fill=\"#3f3d56\"/><circle cx=\"171.29146\" cy=\"204.8449\" r=\"103\" fill=\"#ff6584\"/><path d=\"M742.39622,349.02053l62.59321-182.809L736.2582,346.83222a3.44161,3.44161,0,1,0,6.138,2.18831Z\" transform=\"translate(-148.79073 -36.89661)\" fill=\"#f0f0f0\" opacity=\"0.3\"/><path\n      d=\"M901.95012,240.05454q-18.37971,6.10836-40.75145,12.00083c-77.14515,20.311-180.54976,36.15428-291.16558,44.61271-110.61535,8.45828-215.22739,8.51948-294.5635.17426-38.6472-4.06578-69.21495-9.91317-90.85368-17.381-22.90943-7.9053-34.94724-17.43191-35.77952-28.31364-1.62074-21.19968,40.21258-39.85854,75.59194-51.77816l.95819,2.84289C176.80129,218.58114,150.6779,235.879,151.8281,250.9191c1.4643,19.15595,46.64436,34.80631,123.95529,42.93958,79.16179,8.327,183.58052,8.26316,294.02138-.18138,110.44009-8.44531,213.6549-24.25739,290.63031-44.52332,75.17352-19.79057,117.45048-42.12921,115.98557-61.28547-1.21629-15.90466-32.56722-29.51036-88.2777-38.3124l.46834-2.963c40.48,6.39573,89.09256,18.70823,90.80107,41.04675.83181,10.88188-9.61776,22.12737-31.05892,33.424C936.13107,227.5031,920.60136,233.856,901.95012,240.05454Z\"\n      transform=\"translate(-148.79073 -36.89661)\"\n      fill=\"#3f3d56\"/><circle cx=\"783.42532\" cy=\"375.13624\" r=\"10.70234\" fill=\"#ff6584\"/><circle cx=\"851.42532\" cy=\"665.13624\" r=\"10.70234\" fill=\"#f2f2f2\"/><circle cx=\"486.42532\" cy=\"720.13624\" r=\"20.86614\" fill=\"#f2f2f2\"/><circle cx=\"327.42532\" cy=\"454.13624\" r=\"10.70234\" fill=\"#3f3d56\"/><polygon points=\"687.226 478.768 733.402 490.721 761.723 546.349 713.843 548.227 687.226 478.768\" fill=\"#e6e6e6\"/><polygon points=\"580.645 398.574 606.059 424.002 670.606 563.557 658.722 573.824 580.645 398.574\" fill=\"#ccc\"/><polygon points=\"525.386 421.624 527.38 457.52 588.304 598.694 603.88 596.688 525.386 421.624\" fill=\"#ccc\"/><polygon points=\"523.723 566.637 498.854 607.339 517.187 667.008 552.9 635.061 523.723 566.637\" fill=\"#e6e6e6\"/><path\n      d=\"M892.19547,628.54368q-19.36816,0-42.45654-1.46387c-79.61377-5.05566-182.7378-22.63281-290.376-49.49219-107.63769-26.85937-206.93017-59.79394-279.58545-92.73437-35.39258-16.04688-62.55615-31.23633-80.73535-45.14746-19.24707-14.727-27.666-27.564-25.02393-38.15283,5.14795-20.62891,50.731-25.14209,88.064-25.29541l.01269,3c-51.26806.21044-81.51367,8.38671-85.16552,23.022-4.65186,18.64013,33.28662,47.74072,104.08691,79.84131,72.49561,32.86816,171.60547,65.73925,279.07324,92.55664,107.46729,26.8164,210.40137,44.36328,289.83985,49.4082,77.57861,4.92773,124.74316-2.9375,129.39453-21.57812,3.86181-15.47657-21.59815-38.2754-71.68945-64.19825l1.3789-2.66406c36.397,18.83594,78.64551,45.85156,73.22168,67.58887C979.59244,613.823,966.12955,621.199,942.21988,625.157,928.59049,627.41282,911.84977,628.54368,892.19547,628.54368Z\"\n      transform=\"translate(-148.79073 -36.89661)\"\n      fill=\"#3f3d56\"/></svg>\n    );\n}\n","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/weather/WeatherByCityName.js",["206","207"],"import React, {useState} from \"react\";\nimport '../InfoContainer.css';\nimport Dropdown from '../Dropdown';\nimport InputField from '../InputField';\nimport {useHistory, NavLink} from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SelectOption from './Select';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport default function Weather(props){\n  const classes = useStyles();\n  const [weatherOption,setWeatherOption] = useState('');\n  const [open, setOpen] = React.useState(false);\n  const handleChange = (event) => {\n    setWeatherOption(event.target.value);\n  };\n\n  const handleClose = () => {\n      setOpen(false);\n  };\n\n  const handleOpen = () => {\n      setOpen(true);\n  };\n  const history = useHistory();\n  const [circularProgress,setCircularProgress] = useState(\"static\");\n  const getDetails = (details,method) => {\n    setCircularProgress(\"indeterminate\");\n    fetch('https://information-hub-backend.herokuapp.com/' + method,{\n      method: 'POST',\n      body: details,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    })\n    .then(function(resp) { return resp.json() }) // Convert data to json\n    .then(function(data) {\n        setCircularProgress(\"static\");\n        if(method === \"box/city\" || method === \"find\"){\n          history.push('/results',{ details: data,method:\"WeatherByCityNameList\"});\n        }\n        else{\n          history.push('/results',{ details: data,method:\"WeatherByCityName\"});\n        }\n    })\n    .catch(err => {\n        setCircularProgress(\"static\");\n    });\n  }\n  let clickHandler = (event) => {\n    event.preventDefault();\n    var API = undefined;\n    var details = undefined;\n    var values = undefined;\n    if(weatherOption === \"By City Name\"){\n      details = ['q','units','lang'];\n      values = [event.target.city.value,event.target.units.value,event.target.language.value];\n    }\n    if(weatherOption === \"By Location Coordinates\"){\n      details = ['lat','lon','units','lang'];\n      values = [event.target.latitude.value,event.target.longitude.value,event.target.units.value,event.target.language.value];\n    }\n    if(weatherOption === \"By City ID\"){\n      details = ['id','units','lang'];\n      values = [event.target.id.value,event.target.units.value,event.target.language.value];\n    }\n    if(weatherOption === \"By ZIP code\"){\n      details = ['zip','units','lang'];\n      values = [event.target.zip.value,event.target.units.value,event.target.language.value];\n    }\n    if(weatherOption === \"Cities within a rectangle zone\"){\n      API = \"box/city\";\n      details = ['bbox','units','lang'];\n      values = [event.target.bbox.value,event.target.units.value,event.target.language.value];\n    }\n    if(weatherOption === \"Cities in circle\"){\n      API = \"find\";\n      details = ['lat','lon','cnt','units','lang'];\n      values = [event.target.latitude.value,event.target.longitude.value,event.target.count.value,event.target.units.value,event.target.language.value];\n    }\n    var formBody = [];\n    var idx = 0;\n    for (var property in details) {\n      var encodedKey = encodeURIComponent(details[property]);\n      var encodedValue = encodeURIComponent(values[idx]);\n      formBody.push(encodedKey + \"=\" + encodedValue);\n      idx++;\n    }\n    formBody = formBody.join(\"&\");\n    if(API){\n      getDetails(formBody,API);\n    }\n    else{\n      getDetails(formBody,props.api);\n    }\n  }\n  return (\n    <div class=\"container results-card\" style={{textAlign:'center'}}>\n        <FormControl variant=\"filled\" className={classes.formControl} style={{minWidth: 250,marginBottom:\"2rem\"}} >\n          <InputLabel id=\"demo-controlled-open-select-label\" style = {{fontSize:\"1.1rem\",color:\"#6a197d\",zIndex:\"-1\"}}>Weather Options</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={open}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            onChange={handleChange}\n          >\n            <MenuItem value={''}>None</MenuItem>\n            <MenuItem value={'By City Name'}>By City Name</MenuItem>\n            <MenuItem value={'By Location Coordinates'}>By Location Coordinates</MenuItem>\n            <MenuItem value={'By City ID'}>By City ID</MenuItem>\n            <MenuItem value={'By ZIP code'}>By ZIP code</MenuItem>\n            <MenuItem value={'Cities within a rectangle zone'}>Cities within a rectangle zone</MenuItem>\n            <MenuItem value={'Cities in circle'}>Cities in circle</MenuItem>\n          </Select>\n        </FormControl>\n        {weatherOption === \"\" && <div class=\"container\"><SelectOption /></div>}\n        {weatherOption != \"\" &&\n          <div class=\"wrapper\" style={{textAlign:'left'}}>\n        \t\t\t<div class=\"inner\">\n                  {weatherOption === \"By City Name\" &&\n            \t\t\t\t<form onSubmit={clickHandler}>\n            \t\t\t\t\t<h3 class=\"heading\">{weatherOption}</h3>\n            \t\t\t\t\t<p>Get complete weather data at particular location using City Name</p>\n                      {props.details[0].map((info) => (info.type === \"InputField\"?<InputField name={info.name} description={info.description}/>:<Dropdown name={info.name} description={info.description} content={info.content}/>))}\n                      {circularProgress===\"indeterminate\"? <CircularProgress class=\"loader\" color=\"default\" variant={circularProgress}/>:\n                      <button class=\"form-button\" type=\"submit\" value = \"submit\">Submit\n            \t\t\t\t\t\t<i class=\"zmdi zmdi-arrow-right\"></i>\n            \t\t\t\t\t</button>}\n                    </form>\n                  }\n                  {weatherOption === \"By Location Coordinates\" &&\n                    <form onSubmit={clickHandler}>\n                      <h3 class=\"heading\">{weatherOption}</h3>\n                      <p>Get complete weather data at particular location using Location Coordinates</p>\n                      {props.details[2].map((info) => (info.type === \"InputField\"?<InputField name={info.name} description={info.description}/>:<Dropdown name={info.name} description={info.description} content={info.content}/>))}\n                      {circularProgress===\"indeterminate\"? <CircularProgress class=\"loader\" color=\"default\" variant={circularProgress}/>:\n                      <button class=\"form-button\" type=\"submit\" value = \"submit\">Submit\n                        <i class=\"zmdi zmdi-arrow-right\"></i>\n                      </button>}\n                    </form>\n                  }\n                  {weatherOption === \"By City ID\" &&\n            \t\t\t\t<form onSubmit={clickHandler}>\n            \t\t\t\t\t<h3 class=\"heading\">{weatherOption}</h3>\n                      <p>Get complete weather data at particular location using City ID</p>\n                      {props.details[1].map((info) => (info.type === \"InputField\"?<InputField name={info.name} description={info.description}/>:<Dropdown name={info.name} description={info.description} content={info.content}/>))}\n                      {circularProgress===\"indeterminate\"? <CircularProgress class=\"loader\" color=\"default\" variant={circularProgress}/>:\n                      <button class=\"form-button\" type=\"submit\" value = \"submit\">Submit\n            \t\t\t\t\t\t<i class=\"zmdi zmdi-arrow-right\"></i>\n            \t\t\t\t\t</button>}\n                    </form>\n                  }\n                  {weatherOption === \"Cities within a rectangle zone\" &&\n            \t\t\t\t<form onSubmit={clickHandler}>\n            \t\t\t\t\t<h3 class=\"heading\">{weatherOption}</h3>\n                      <p>Get complete weather data of cities within a rectangle zone</p>\n                      {props.details[4].map((info) => (info.type === \"InputField\"?<InputField name={info.name} description={info.description}/>:<Dropdown name={info.name} description={info.description} content={info.content}/>))}\n                      {circularProgress===\"indeterminate\"? <CircularProgress class=\"loader\" color=\"default\" variant={circularProgress}/>:\n                      <button class=\"form-button\" type=\"submit\" value = \"submit\">Submit\n            \t\t\t\t\t\t<i class=\"zmdi zmdi-arrow-right\"></i>\n            \t\t\t\t\t</button>}\n                    </form>\n                  }\n                  {weatherOption === \"Cities in circle\" &&\n            \t\t\t\t<form onSubmit={clickHandler}>\n            \t\t\t\t\t<h3 class=\"heading\">{weatherOption}</h3>\n                      <p>Get complete weather data of cities in circle</p>\n                      {props.details[5].map((info) => (info.type === \"InputField\"?<InputField name={info.name} description={info.description}/>:<Dropdown name={info.name} description={info.description} content={info.content}/>))}\n                      {circularProgress===\"indeterminate\"? <CircularProgress class=\"loader\" color=\"default\" variant={circularProgress}/>:\n                      <button class=\"form-button\" type=\"submit\" value = \"submit\">Submit\n            \t\t\t\t\t\t<i class=\"zmdi zmdi-arrow-right\"></i>\n            \t\t\t\t\t</button>}\n                    </form>\n                  }\n                  {weatherOption === \"By ZIP code\" &&\n                    <form onSubmit={clickHandler}>\n                      <h3 class=\"heading\">{weatherOption}</h3>\n                      <p>Get complete weather data at particular location using ZIP code</p>\n                      {props.details[3].map((info) => (info.type === \"InputField\"?<InputField name={info.name} description={info.description}/>:<Dropdown name={info.name} description={info.description} content={info.content}/>))}\n                      {circularProgress===\"indeterminate\"? <CircularProgress class=\"loader\" color=\"default\" variant={circularProgress}/>:\n                      <button class=\"form-button\" type=\"submit\" value = \"submit\">Submit\n                        <i class=\"zmdi zmdi-arrow-right\"></i>\n                      </button>}\n                    </form>\n                  }\n              </div>\n        </div>\n      }\n    </div>\n  );\n}\n","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/weather/AirPollution.js",["208","209"],"import React, {useState} from \"react\";\nimport '../InfoContainer.css';\nimport Dropdown from '../Dropdown';\nimport InputField from '../InputField';\nimport {useHistory, NavLink} from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SelectOption from './Select';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nconst unixTime = (date) => {\n  return new Date(date).getTime() / 1000;\n}\n\nexport default function Weather(props){\n  const classes = useStyles();\n  const [airPollutionOption,setAirPollutionOption] = useState('');\n  const [open, setOpen] = React.useState(false);\n  const handleChange = (event) => {\n    setAirPollutionOption(event.target.value);\n  };\n\n  const handleClose = () => {\n      setOpen(false);\n  };\n\n  const handleOpen = () => {\n      setOpen(true);\n  };\n  const history = useHistory();\n  const [circularProgress,setCircularProgress] = useState(\"static\");\n  const getDetails = (details,method) => {\n    setCircularProgress(\"indeterminate\");\n    fetch('https://information-hub-backend.herokuapp.com/' + method,{\n      method: 'POST',\n      body: details,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    })\n    .then(function(resp) { return resp.json() }) // Convert data to json\n    .then(function(data) {\n        setCircularProgress(\"static\");\n        history.push('/results',{ details: data,method:\"AirPollution\"});\n    })\n    .catch(err => {\n        setCircularProgress(\"static\");\n    });\n  }\n  let clickHandler = (event) => {\n    event.preventDefault();\n    var API = undefined;\n    var details = undefined;\n    var values = undefined;\n    if(airPollutionOption === \"Current Air Pollution Data\"){\n      details = ['lat','lon'];\n      values = [event.target.latitude.value,event.target.longitude.value];\n    }\n    if(airPollutionOption === \"Forecast Air Pollution Data\"){\n      API = 'air_pollution/forecast';\n      details = ['lat','lon'];\n      values = [event.target.latitude.value,event.target.longitude.value];\n    }\n    if(airPollutionOption === \"Historical Air Pollution Data\"){\n      API = 'air_pollution/history';\n      details = ['lat','lon','start','end'];\n      values = [event.target.latitude.value,event.target.longitude.value,unixTime(event.target.start.value),unixTime(event.target.end.value)];\n    }\n    var formBody = [];\n    var idx = 0;\n    for (var property in details) {\n      var encodedKey = encodeURIComponent(details[property]);\n      var encodedValue = encodeURIComponent(values[idx]);\n      formBody.push(encodedKey + \"=\" + encodedValue);\n      idx++;\n    }\n    formBody = formBody.join(\"&\");\n    if(API){\n      getDetails(formBody,API);\n    }\n    else{\n      getDetails(formBody,props.api);\n    }\n  }\n  return (\n    <div class=\"container results-card\" style={{textAlign:'center'}}>\n        <FormControl variant=\"filled\" className={classes.formControl} style={{minWidth: 250,marginBottom:\"2rem\"}} >\n          <InputLabel id=\"demo-controlled-open-select-label\" style = {{fontSize:\"1.1rem\",color:\"#6a197d\",zIndex:\"-1\"}}>Air Pollution Options</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={open}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            onChange={handleChange}\n          >\n            <MenuItem value={''}>None</MenuItem>\n            <MenuItem value={'Current Air Pollution Data'}>Current Air Pollution Data</MenuItem>\n            <MenuItem value={'Forecast Air Pollution Data'}>Forecast Air Pollution Data</MenuItem>\n            <MenuItem value={'Historical Air Pollution Data'}>Historical Air Pollution Data</MenuItem>\n          </Select>\n        </FormControl>\n        {airPollutionOption === \"\" && <div class=\"container\"><SelectOption /></div>}\n        {airPollutionOption != \"\" &&\n          <div class=\"wrapper\" style={{textAlign:'left'}}>\n        \t\t\t<div class=\"inner\">\n                  {airPollutionOption === \"Current Air Pollution Data\" &&\n            \t\t\t\t<form onSubmit={clickHandler}>\n            \t\t\t\t\t<h3 class=\"heading\">{airPollutionOption}</h3>\n            \t\t\t\t\t<p>Get air pollution data for any coordinates on the globe</p>\n                      {props.details[0].map((info) => (info.type === \"InputField\"?<InputField name={info.name} description={info.description}/>:<Dropdown name={info.name} description={info.description} content={info.content}/>))}\n                      {circularProgress===\"indeterminate\"? <CircularProgress class=\"loader\" color=\"default\" variant={circularProgress}/>:\n                      <button class=\"form-button\" type=\"submit\" value = \"submit\">Submit\n            \t\t\t\t\t\t<i class=\"zmdi zmdi-arrow-right\"></i>\n            \t\t\t\t\t</button>}\n                    </form>\n                  }\n                  {airPollutionOption === \"Forecast Air Pollution Data\" &&\n                    <form onSubmit={clickHandler}>\n                      <h3 class=\"heading\">{airPollutionOption}</h3>\n                      <p>Get air pollution data for any coordinates on the globe</p>\n                      {props.details[0].map((info) => (info.type === \"InputField\"?<InputField name={info.name} description={info.description}/>:<Dropdown name={info.name} description={info.description} content={info.content}/>))}\n                      {circularProgress===\"indeterminate\"? <CircularProgress class=\"loader\" color=\"default\" variant={circularProgress}/>:\n                      <button class=\"form-button\" type=\"submit\" value = \"submit\">Submit\n                        <i class=\"zmdi zmdi-arrow-right\"></i>\n                      </button>}\n                    </form>\n                  }\n                  {airPollutionOption === \"Historical Air Pollution Data\" &&\n            \t\t\t\t<form onSubmit={clickHandler}>\n            \t\t\t\t\t<h3 class=\"heading\">{airPollutionOption}</h3>\n                      <p>Get air pollution data for any coordinates on the globe</p>\n                      {props.details[1].map((info) => (info.type === \"InputField\"?<InputField name={info.name} description={info.description}/>:<Dropdown name={info.name} description={info.description} content={info.content}/>))}\n                      {circularProgress===\"indeterminate\"? <CircularProgress class=\"loader\" color=\"default\" variant={circularProgress}/>:\n                      <button class=\"form-button\" type=\"submit\" value = \"submit\">Submit\n            \t\t\t\t\t\t<i class=\"zmdi zmdi-arrow-right\"></i>\n            \t\t\t\t\t</button>}\n                    </form>\n                  }\n                  </div>\n        </div>\n      }\n    </div>\n  );\n}\n","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/weather/Geocoding.js",["210","211"],"import React, {useState} from \"react\";\nimport '../InfoContainer.css';\nimport Dropdown from '../Dropdown';\nimport InputField from '../InputField';\nimport {useHistory, NavLink} from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SelectOption from './Select';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport default function Weather(props){\n  const classes = useStyles();\n  const [geocodingOption,setGeocodingOption] = useState('');\n  const [open, setOpen] = React.useState(false);\n  const handleChange = (event) => {\n    setGeocodingOption(event.target.value);\n  };\n\n  const handleClose = () => {\n      setOpen(false);\n  };\n\n  const handleOpen = () => {\n      setOpen(true);\n  };\n  const history = useHistory();\n  const [circularProgress,setCircularProgress] = useState(\"static\");\n  const getDetails = (details,method) => {\n    setCircularProgress(\"indeterminate\");\n    fetch('https://information-hub-backend.herokuapp.com/' + method,{\n      method: 'POST',\n      body: details,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    })\n    .then(function(resp) { return resp.json() }) // Convert data to json\n    .then(function(data) {\n        setCircularProgress(\"static\");\n        history.push('/results',{ details: data,method:\"Geocoding\"});\n    })\n    .catch(err => {\n        setCircularProgress(\"static\");\n    });\n  }\n  let clickHandler = (event) => {\n    event.preventDefault();\n    var API = undefined;\n    var details = undefined;\n    var values = undefined;\n    if(geocodingOption === \"Coordinates by location name\"){\n      details = ['q','limit'];\n      values = [event.target.q.value,event.target.limit.value];\n    }\n    if(geocodingOption === \"Coordinates by zip/post code\"){\n      API = 'ZipCode';\n      details = ['zip'];\n      values = [event.target.zip.value];\n    }\n    var formBody = [];\n    var idx = 0;\n    for (var property in details) {\n      var encodedKey = encodeURIComponent(details[property]);\n      var encodedValue = encodeURIComponent(values[idx]);\n      formBody.push(encodedKey + \"=\" + encodedValue);\n      idx++;\n    }\n    formBody = formBody.join(\"&\");\n    if(API){\n      getDetails(formBody,API);\n    }\n    else{\n      getDetails(formBody,props.api);\n    }\n  }\n  return (\n    <div class=\"container results-card\" style={{textAlign:'center'}}>\n        <FormControl variant=\"filled\" className={classes.formControl} style={{minWidth: 250,marginBottom:\"2rem\"}} >\n          <InputLabel id=\"demo-controlled-open-select-label\" style = {{fontSize:\"1.1rem\",color:\"#6a197d\",zIndex:\"-1\"}}>Geocoding Options</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={open}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            onChange={handleChange}\n          >\n            <MenuItem value={''}>None</MenuItem>\n            <MenuItem value={'Coordinates by location name'}>Coordinates by location name</MenuItem>\n            <MenuItem value={'Coordinates by zip/post code'}>Coordinates by zip/post code</MenuItem>\n          </Select>\n        </FormControl>\n        {geocodingOption === \"\" && <div class=\"container\"><SelectOption /></div>}\n        {geocodingOption != \"\" &&\n          <div class=\"wrapper\" style={{textAlign:'left'}}>\n        \t\t\t<div class=\"inner\">\n                  {geocodingOption === \"Coordinates by location name\" &&\n            \t\t\t\t<form onSubmit={clickHandler}>\n            \t\t\t\t\t<h3 class=\"heading\">{geocodingOption}</h3>\n            \t\t\t\t\t<p>Search for locations while working with geographic names and coordinates</p>\n                      {props.details[0].map((info) => (info.type === \"InputField\"?<InputField name={info.name} description={info.description}/>:<Dropdown name={info.name} description={info.description} content={info.content}/>))}\n                      {circularProgress===\"indeterminate\"? <CircularProgress class=\"loader\" color=\"default\" variant={circularProgress}/>:\n                      <button class=\"form-button\" type=\"submit\" value = \"submit\">Submit\n            \t\t\t\t\t\t<i class=\"zmdi zmdi-arrow-right\"></i>\n            \t\t\t\t\t</button>}\n                    </form>\n                  }\n                  {geocodingOption === \"Coordinates by zip/post code\" &&\n                    <form onSubmit={clickHandler}>\n                      <h3 class=\"heading\">{geocodingOption}</h3>\n                      <p>Search for locations while working with geographic names and coordinates</p>\n                      {props.details[1].map((info) => (info.type === \"InputField\"?<InputField name={info.name} description={info.description}/>:<Dropdown name={info.name} description={info.description} content={info.content}/>))}\n                      {circularProgress===\"indeterminate\"? <CircularProgress class=\"loader\" color=\"default\" variant={circularProgress}/>:\n                      <button class=\"form-button\" type=\"submit\" value = \"submit\">Submit\n                        <i class=\"zmdi zmdi-arrow-right\"></i>\n                      </button>}\n                    </form>\n                  }\n                  </div>\n        </div>\n      }\n    </div>\n  );\n}\n","/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/movies/MovieCards.js",["212","213"],"/Users/kottedheeru/Documents/InformationHubFrontend/src/components/InfoContainer/movies/MovieData.js",["214","215","216","217","218","219"],{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":13,"column":8,"nodeType":"226","messageId":"227","endLine":13,"endColumn":17},{"ruleId":"224","severity":1,"message":"228","line":25,"column":8,"nodeType":"226","messageId":"227","endLine":25,"endColumn":18},{"ruleId":"224","severity":1,"message":"229","line":31,"column":7,"nodeType":"226","messageId":"227","endLine":31,"endColumn":15},{"ruleId":"230","severity":1,"message":"231","line":41,"column":8,"nodeType":"232","endLine":41,"endColumn":10,"suggestions":"233"},{"ruleId":"224","severity":1,"message":"234","line":3,"column":8,"nodeType":"226","messageId":"227","endLine":3,"endColumn":19},{"ruleId":"224","severity":1,"message":"235","line":5,"column":26,"nodeType":"226","messageId":"227","endLine":5,"endColumn":32},{"ruleId":"224","severity":1,"message":"236","line":5,"column":34,"nodeType":"226","messageId":"227","endLine":5,"endColumn":40},{"ruleId":"224","severity":1,"message":"237","line":5,"column":42,"nodeType":"226","messageId":"227","endLine":5,"endColumn":47},{"ruleId":"224","severity":1,"message":"238","line":10,"column":8,"nodeType":"226","messageId":"227","endLine":10,"endColumn":16},{"ruleId":"239","severity":1,"message":"240","line":27,"column":1,"nodeType":"241","endLine":481,"endColumn":2},{"ruleId":"242","severity":1,"message":"243","line":124,"column":61,"nodeType":"244","messageId":"245","endLine":124,"endColumn":63},{"ruleId":"242","severity":1,"message":"243","line":156,"column":92,"nodeType":"244","messageId":"245","endLine":156,"endColumn":94},{"ruleId":"242","severity":1,"message":"243","line":190,"column":89,"nodeType":"244","messageId":"245","endLine":190,"endColumn":91},{"ruleId":"242","severity":1,"message":"243","line":224,"column":91,"nodeType":"244","messageId":"245","endLine":224,"endColumn":93},{"ruleId":"242","severity":1,"message":"243","line":245,"column":78,"nodeType":"244","messageId":"245","endLine":245,"endColumn":80},{"ruleId":"242","severity":1,"message":"243","line":262,"column":55,"nodeType":"244","messageId":"245","endLine":262,"endColumn":57},{"ruleId":"246","severity":1,"message":"247","line":278,"column":85,"nodeType":"248","messageId":"249","endLine":278,"endColumn":87},{"ruleId":"250","severity":1,"message":"251","line":279,"column":39,"nodeType":"226","messageId":"252","endLine":279,"endColumn":50},{"ruleId":"250","severity":1,"message":"253","line":280,"column":39,"nodeType":"226","messageId":"252","endLine":280,"endColumn":46},{"ruleId":"242","severity":1,"message":"243","line":284,"column":76,"nodeType":"244","messageId":"245","endLine":284,"endColumn":78},{"ruleId":"242","severity":1,"message":"243","line":321,"column":79,"nodeType":"244","messageId":"245","endLine":321,"endColumn":81},{"ruleId":"246","severity":1,"message":"247","line":335,"column":108,"nodeType":"248","messageId":"249","endLine":335,"endColumn":110},{"ruleId":"242","severity":1,"message":"243","line":339,"column":100,"nodeType":"244","messageId":"245","endLine":339,"endColumn":102},{"ruleId":"242","severity":1,"message":"243","line":378,"column":79,"nodeType":"244","messageId":"245","endLine":378,"endColumn":81},{"ruleId":"246","severity":1,"message":"247","line":392,"column":108,"nodeType":"248","messageId":"249","endLine":392,"endColumn":110},{"ruleId":"242","severity":1,"message":"243","line":396,"column":100,"nodeType":"244","messageId":"245","endLine":396,"endColumn":102},{"ruleId":"242","severity":1,"message":"243","line":435,"column":77,"nodeType":"244","messageId":"245","endLine":435,"endColumn":79},{"ruleId":"246","severity":1,"message":"247","line":449,"column":106,"nodeType":"248","messageId":"249","endLine":449,"endColumn":108},{"ruleId":"242","severity":1,"message":"243","line":453,"column":98,"nodeType":"244","messageId":"245","endLine":453,"endColumn":100},{"ruleId":"224","severity":1,"message":"254","line":5,"column":21,"nodeType":"226","messageId":"227","endLine":5,"endColumn":28},{"ruleId":"255","severity":1,"message":"256","line":15,"column":9,"nodeType":"257","endLine":15,"endColumn":93},{"ruleId":"255","severity":1,"message":"256","line":23,"column":15,"nodeType":"257","endLine":23,"endColumn":36},{"ruleId":"255","severity":1,"message":"256","line":31,"column":17,"nodeType":"257","endLine":31,"endColumn":117},{"ruleId":"255","severity":1,"message":"256","line":35,"column":19,"nodeType":"257","endLine":35,"endColumn":44},{"ruleId":"255","severity":1,"message":"256","line":36,"column":19,"nodeType":"257","endLine":36,"endColumn":45},{"ruleId":"255","severity":1,"message":"256","line":37,"column":19,"nodeType":"257","endLine":37,"endColumn":68},{"ruleId":"224","severity":1,"message":"258","line":11,"column":8,"nodeType":"226","messageId":"227","endLine":11,"endColumn":15},{"ruleId":"224","severity":1,"message":"259","line":67,"column":7,"nodeType":"226","messageId":"227","endLine":67,"endColumn":13},{"ruleId":"255","severity":1,"message":"256","line":333,"column":13,"nodeType":"257","endLine":333,"endColumn":144},{"ruleId":"255","severity":1,"message":"256","line":334,"column":13,"nodeType":"257","endLine":334,"endColumn":148},{"ruleId":"255","severity":1,"message":"256","line":335,"column":13,"nodeType":"257","endLine":335,"endColumn":142},{"ruleId":"260","severity":1,"message":"261","line":6,"column":5,"nodeType":"257","messageId":"262","endLine":6,"endColumn":90,"fix":"263"},{"ruleId":"255","severity":1,"message":"264","line":7,"column":5,"nodeType":"257","endLine":7,"endColumn":33},{"ruleId":"255","severity":1,"message":"264","line":8,"column":5,"nodeType":"257","endLine":8,"endColumn":34},{"ruleId":"260","severity":1,"message":"261","line":9,"column":5,"nodeType":"257","messageId":"262","endLine":9,"endColumn":75,"fix":"265"},{"ruleId":"260","severity":1,"message":"261","line":10,"column":5,"nodeType":"257","messageId":"262","endLine":10,"endColumn":77,"fix":"266"},{"ruleId":"239","severity":1,"message":"240","line":4,"column":1,"nodeType":"241","endLine":16,"endColumn":2},{"ruleId":"224","severity":1,"message":"267","line":1,"column":16,"nodeType":"226","messageId":"227","endLine":1,"endColumn":25},{"ruleId":"239","severity":1,"message":"240","line":3,"column":1,"nodeType":"241","endLine":14,"endColumn":2},{"ruleId":"239","severity":1,"message":"240","line":7,"column":1,"nodeType":"241","endLine":35,"endColumn":2},{"ruleId":"268","severity":1,"message":"269","line":41,"column":17,"nodeType":"270","messageId":"249","endLine":41,"endColumn":21},{"ruleId":"268","severity":1,"message":"271","line":42,"column":17,"nodeType":"270","messageId":"249","endLine":42,"endColumn":21},{"ruleId":"268","severity":1,"message":"272","line":43,"column":17,"nodeType":"270","messageId":"249","endLine":43,"endColumn":19},{"ruleId":"268","severity":1,"message":"273","line":56,"column":17,"nodeType":"270","messageId":"249","endLine":56,"endColumn":21},{"ruleId":"268","severity":1,"message":"274","line":57,"column":17,"nodeType":"270","messageId":"249","endLine":57,"endColumn":20},{"ruleId":"268","severity":1,"message":"275","line":58,"column":17,"nodeType":"270","messageId":"249","endLine":58,"endColumn":20},{"ruleId":"268","severity":1,"message":"276","line":59,"column":17,"nodeType":"270","messageId":"249","endLine":59,"endColumn":24},{"ruleId":"239","severity":1,"message":"240","line":2,"column":1,"nodeType":"241","endLine":42,"endColumn":2},{"ruleId":"239","severity":1,"message":"240","line":3,"column":1,"nodeType":"241","endLine":64,"endColumn":2},{"ruleId":"224","severity":1,"message":"254","line":5,"column":21,"nodeType":"226","messageId":"227","endLine":5,"endColumn":28},{"ruleId":"246","severity":1,"message":"247","line":134,"column":24,"nodeType":"248","messageId":"249","endLine":134,"endColumn":26},{"ruleId":"224","severity":1,"message":"254","line":5,"column":21,"nodeType":"226","messageId":"227","endLine":5,"endColumn":28},{"ruleId":"246","severity":1,"message":"247","line":118,"column":29,"nodeType":"248","messageId":"249","endLine":118,"endColumn":31},{"ruleId":"224","severity":1,"message":"254","line":5,"column":21,"nodeType":"226","messageId":"227","endLine":5,"endColumn":28},{"ruleId":"246","severity":1,"message":"247","line":108,"column":26,"nodeType":"248","messageId":"249","endLine":108,"endColumn":28},{"ruleId":"239","severity":1,"message":"240","line":3,"column":1,"nodeType":"241","endLine":19,"endColumn":2},{"ruleId":"255","severity":1,"message":"264","line":12,"column":9,"nodeType":"257","endLine":12,"endColumn":47},{"ruleId":"224","severity":1,"message":"254","line":5,"column":21,"nodeType":"226","messageId":"227","endLine":5,"endColumn":28},{"ruleId":"224","severity":1,"message":"277","line":46,"column":9,"nodeType":"226","messageId":"227","endLine":46,"endColumn":16},{"ruleId":"230","severity":1,"message":"278","line":85,"column":5,"nodeType":"232","endLine":85,"endColumn":7,"suggestions":"279"},{"ruleId":"250","severity":1,"message":"280","line":106,"column":13,"nodeType":"226","messageId":"252","endLine":106,"endColumn":14},{"ruleId":"250","severity":1,"message":"281","line":107,"column":13,"nodeType":"226","messageId":"252","endLine":107,"endColumn":14},{"ruleId":"282","severity":1,"message":"283","line":149,"column":13,"nodeType":"257","endLine":149,"endColumn":207},"no-native-reassign",["284"],"no-negated-in-lhs",["285"],"no-unused-vars","'languages' is defined but never used.","Identifier","unusedVar","'MovieCards' is defined but never used.","'redirect' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["286"],"'WeatherData' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Carousel' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-redeclare","'weatherIcon' is already defined.","redeclared","'weather' is already defined.","'NavLink' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Cookies' is defined but never used.","'verify' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"287","text":"288"},"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",{"range":"289","text":"288"},{"range":"290","text":"288"},"'useEffect' is defined but never used.","no-dupe-keys","Duplicate key '1h'.","ObjectExpression","Duplicate key '3h'.","Duplicate key 'dt'.","Duplicate key 'name'.","Duplicate key 'lat'.","Duplicate key 'lon'.","Duplicate key 'country'.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.api'. Either include it or remove the dependency array.",["291"],"'A' is already defined.","'B' is already defined.","jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","no-global-assign","no-unsafe-negation",{"desc":"292","fix":"293"},[195,195]," rel=\"noreferrer\"",[476,476],[601,601],{"desc":"294","fix":"295"},"Update the dependencies array to be: [dispatch]",{"range":"296","text":"297"},"Update the dependencies array to be: [props.api]",{"range":"298","text":"299"},[1798,1800],"[dispatch]",[2652,2654],"[props.api]"]