var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _css;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import Box, { css } from 'ui-box';
import { colors } from '../../colors';
import { Text } from '../../typography';
import { getTextSizeForControlHeight, getBorderRadiusForControlHeight } from '../../shared-styles';
import SegmentedControlAppearances from './styles/SegmentedControlAppearances';

var keysSegmentedControlAppearances = Object.keys(SegmentedControlAppearances);

var labelClass = css({
  display: 'flex',
  flex: 1,
  alignItems: 'center',
  justifyContent: 'center',
  position: 'relative'
});

var wrapperClass = css((_css = {
  position: 'relative',
  display: 'flex',
  flex: 1,
  cursor: 'pointer',
  marginLeft: '-1px'
}, _defineProperty(_css, ':first-child .' + labelClass, {
  borderTopLeftRadius: 3,
  borderBottomLeftRadius: 3
}), _defineProperty(_css, ':last-child .' + labelClass, {
  borderTopRightRadius: 3,
  borderBottomRightRadius: 3
}), _css));

var offscreenCss = css({
  overflow: 'hidden',
  position: 'absolute',
  height: '1px',
  width: '1px',
  padding: 0,
  margin: '-1px',
  border: 0,
  clip: 'rect(0 0 0 0)'
});

var SegmentedControlRadio = function (_PureComponent) {
  _inherits(SegmentedControlRadio, _PureComponent);

  function SegmentedControlRadio() {
    _classCallCheck(this, SegmentedControlRadio);

    return _possibleConstructorReturn(this, (SegmentedControlRadio.__proto__ || Object.getPrototypeOf(SegmentedControlRadio)).apply(this, arguments));
  }

  _createClass(SegmentedControlRadio, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          name = _props.name,
          label = _props.label,
          value = _props.value,
          height = _props.height,
          checked = _props.checked,
          _onChange = _props.onChange,
          appearance = _props.appearance,
          isFirstItem = _props.isFirstItem,
          isLastItem = _props.isLastItem;


      var textSize = getTextSizeForControlHeight({ height: height });
      var borderRadius = getBorderRadiusForControlHeight({ height: height });
      var styles = SegmentedControlAppearances[appearance];

      return React.createElement(
        Box,
        _extends({
          is: 'label',
          className: '' + wrapperClass,
          css: styles
        }, checked ? {
          'data-active': true
        } : {}, isFirstItem ? {
          borderTopLeftRadius: borderRadius,
          borderBottomLeftRadius: borderRadius
        } : {}, isLastItem ? {
          borderTopRightRadius: borderRadius,
          borderBottomRightRadius: borderRadius
        } : {}),
        React.createElement('input', {
          type: 'radio',
          className: '' + offscreenCss,
          name: name,
          value: value,
          checked: checked,
          onChange: function onChange(e) {
            return _onChange(e.target.value);
          }
        }),
        React.createElement(
          Text,
          _extends({
            fontWeight: 500,
            size: textSize,
            className: '' + labelClass
          }, checked ? { color: colors.blue['500'] } : {}),
          label
        )
      );
    }
  }]);

  return SegmentedControlRadio;
}(PureComponent);

SegmentedControlRadio.propTypes = {
  name: PropTypes.string.isRequired,
  label: PropTypes.node.isRequired,
  value: PropTypes.string.isRequired,
  height: PropTypes.number.isRequired,
  checked: PropTypes.bool.isRequired,
  onChange: PropTypes.func.isRequired,
  appearance: PropTypes.oneOf(keysSegmentedControlAppearances).isRequired,
  isFirstItem: PropTypes.bool,
  isLastItem: PropTypes.bool
};
export default SegmentedControlRadio;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,