var _extends2, _extends3, _extends4, _extends5, _extends6, _extends7;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import { colors } from '../../../colors';
import { TextColors } from '../../../typography';

var baseStyle = {
  WebkitFontSmoothing: 'antialiased',
  boxSizing: 'border-box',
  verticalAlign: 'middle',
  textDecoration: 'none',
  transition: 'box-shadow 80ms ease-in-out',
  WebkitAppearance: 'none',
  border: 'none',
  outline: 'none',
  cursor: 'pointer',
  '[disabled], [data-disabled]': {
    cursor: 'not-allowed',
    opacity: 0.8,
    backgroundImage: 'none',
    backgroundColor: colors.neutral['10A'],
    boxShadow: 'none',
    color: colors.neutral['300A']
  }
};

var hoverState = '&:not([disabled]):not([data-disabled]):hover';
var focusState = '&:not([disabled]):not([data-disabled]):focus';
var activeState = '&:not([disabled]):not([data-disabled]):active, &:not([disabled]):not([data-disabled])[data-popover-opened], &:not([disabled]):not([data-disabled])[data-active]';

var ButtonAppearances = {
  default: _extends({}, baseStyle, (_extends2 = {
    backgroundColor: 'white',
    color: TextColors.default,
    backgroundImage: 'linear-gradient(to top, ' + colors.neutral['5A'] + ', ' + colors.white['5A'] + ')',
    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['20A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['10A']
  }, _defineProperty(_extends2, hoverState, {
    backgroundImage: 'linear-gradient(to top, ' + colors.neutral['7A'] + ', ' + colors.neutral['3A'] + ' )',
    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['40A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['15A']
  }), _defineProperty(_extends2, focusState, {
    zIndex: 2,
    boxShadow: '0 0 0 3px ' + colors.blue['20A'] + ', inset 0 0 0 1px ' + colors.neutral['70A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['10A']
  }), _defineProperty(_extends2, activeState, {
    color: colors.blue['1000'],
    backgroundImage: 'none',
    backgroundColor: colors.blue['10A'],
    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['20A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['10A']
    // BoxShadow: `inset 0 0 0 1px ${colors.blue['80A']}`,
  }), _extends2)),
  blue: _extends({}, baseStyle, (_extends3 = {
    backgroundColor: colors.blue['500'],
    color: 'white',
    backgroundImage: 'linear-gradient(to top, ' + colors.blue['600'] + ', ' + colors.blue['400'] + ')',
    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['30A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['30A']
  }, _defineProperty(_extends3, hoverState, {
    backgroundImage: 'linear-gradient(to top, ' + colors.blue['700'] + ', ' + colors.blue['500'] + ')'
  }), _defineProperty(_extends3, focusState, {
    zIndex: 2,
    boxShadow: '0 0 0 3px ' + colors.blue['50A'] + ', inset 0 0 0 1px ' + colors.neutral['30A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['30A']
  }), _defineProperty(_extends3, activeState, {
    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['30A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['30A'],
    backgroundImage: 'linear-gradient(to top, ' + colors.blue['800'] + ', ' + colors.blue['900'] + ')'
  }), _extends3)),
  green: _extends({}, baseStyle, (_extends4 = {
    backgroundColor: colors.green['500'],
    color: 'white',
    backgroundImage: 'linear-gradient(to top, ' + colors.green['600'] + ', ' + colors.green['500'] + ')',
    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['30A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['30A']
  }, _defineProperty(_extends4, hoverState, {
    backgroundImage: 'linear-gradient(to top, ' + colors.green['700'] + ', ' + colors.green['600'] + ')'
  }), _defineProperty(_extends4, focusState, {
    zIndex: 2,
    boxShadow: '0 0 0 3px ' + colors.green['100A'] + ', inset 0 0 0 1px ' + colors.neutral['30A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['30A']
  }), _defineProperty(_extends4, activeState, {
    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['30A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['30A'],
    backgroundImage: 'linear-gradient(to top, ' + colors.green['800'] + ', ' + colors.green['900'] + ')'
  }), _extends4)),
  red: _extends({}, baseStyle, (_extends5 = {
    backgroundColor: colors.green['500'],
    color: 'white',
    backgroundImage: 'linear-gradient(to top, ' + colors.red['600'] + ', ' + colors.red['500'] + ')',
    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['30A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['30A']
  }, _defineProperty(_extends5, hoverState, {
    backgroundImage: 'linear-gradient(to top, ' + colors.red['700'] + ', ' + colors.red['600'] + ')'
  }), _defineProperty(_extends5, focusState, {
    zIndex: 2,
    boxShadow: '0 0 0 3px ' + colors.red['100A'] + ', inset 0 0 0 1px ' + colors.neutral['30A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['30A']
  }), _defineProperty(_extends5, activeState, {
    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['30A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['30A'],
    backgroundImage: 'linear-gradient(to top, ' + colors.red['800'] + ', ' + colors.red['900'] + ')'
  }), _extends5)),
  ghost: _extends({}, baseStyle, (_extends6 = {
    backgroundColor: 'transparent',
    color: TextColors.default
  }, _defineProperty(_extends6, hoverState, {
    backgroundColor: colors.neutral['7A']
  }), _defineProperty(_extends6, focusState, {
    zIndex: 2,
    boxShadow: '0 0 0 3px ' + colors.blue['50A']
  }), _defineProperty(_extends6, activeState, {
    color: colors.blue['1000'],
    boxShadow: 'none',
    backgroundColor: colors.blue['10A']
  }), _extends6)),
  ghostBlue: _extends({}, baseStyle, (_extends7 = {
    color: colors.blue['500'],
    backgroundColor: 'transparent'
  }, _defineProperty(_extends7, hoverState, {
    backgroundColor: colors.neutral['7A']
  }), _defineProperty(_extends7, focusState, {
    zIndex: 2,
    boxShadow: '0 0 0 3px ' + colors.blue['50A']
  }), _defineProperty(_extends7, activeState, {
    color: colors.blue['1000'],
    boxShadow: 'none',
    backgroundColor: colors.blue['10A']
  }), _extends7))
};

export default ButtonAppearances;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,