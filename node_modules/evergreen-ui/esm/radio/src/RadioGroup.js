var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import { Pane } from '../../layers';
import Radio from './Radio';

var RadioGroup = function (_PureComponent) {
  _inherits(RadioGroup, _PureComponent);

  function RadioGroup(props, context) {
    _classCallCheck(this, RadioGroup);

    var _this = _possibleConstructorReturn(this, (RadioGroup.__proto__ || Object.getPrototypeOf(RadioGroup)).call(this, props, context));

    _this.handleChange = function (value) {
      _this.setState({
        selected: value
      });
      _this.props.onChange(value);
    };

    _this.state = {
      selected: (props.items.find(function (item) {
        return item.isDefaultSelected;
      }) || {}).value
    };
    return _this;
  }

  _createClass(RadioGroup, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          label = _props.label,
          items = _props.items,
          onChange = _props.onChange,
          props = _objectWithoutProperties(_props, ['label', 'items', 'onChange']);

      var selected = this.state.selected;


      return React.createElement(
        Pane,
        _extends({ role: 'group', 'aria-label': label }, props),
        items.map(function (item) {
          return React.createElement(Radio, {
            key: item.value,
            name: item.name,
            value: item.value,
            label: item.label,
            checked: selected === item.value,
            disabled: item.isDisabled,
            onChange: function onChange() {
              return _this2.handleChange(item.value);
            }
          });
        })
      );
    }
  }]);

  return RadioGroup;
}(PureComponent);

RadioGroup.propTypes = _extends({}, Pane.propTypes, {
  label: PropTypes.string,
  onChange: PropTypes.func,
  items: PropTypes.arrayOf(PropTypes.shape({
    name: PropTypes.string,
    value: PropTypes.string,
    label: PropTypes.node,
    isDisabled: PropTypes.bool,
    isDefaultSelected: PropTypes.bool
  })).isRequired
});
RadioGroup.defaultProps = {
  items: []
};
export default RadioGroup;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yYWRpby9zcmMvUmFkaW9Hcm91cC5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsIlB1cmVDb21wb25lbnQiLCJQcm9wVHlwZXMiLCJQYW5lIiwiUmFkaW8iLCJSYWRpb0dyb3VwIiwicHJvcHMiLCJjb250ZXh0IiwiaGFuZGxlQ2hhbmdlIiwic2V0U3RhdGUiLCJzZWxlY3RlZCIsInZhbHVlIiwib25DaGFuZ2UiLCJzdGF0ZSIsIml0ZW1zIiwiZmluZCIsIml0ZW0iLCJpc0RlZmF1bHRTZWxlY3RlZCIsImxhYmVsIiwibWFwIiwibmFtZSIsImlzRGlzYWJsZWQiLCJwcm9wVHlwZXMiLCJzdHJpbmciLCJmdW5jIiwiYXJyYXlPZiIsInNoYXBlIiwibm9kZSIsImJvb2wiLCJpc1JlcXVpcmVkIiwiZGVmYXVsdFByb3BzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSxPQUFPQSxLQUFQLElBQWdCQyxhQUFoQixRQUFxQyxPQUFyQztBQUNBLE9BQU9DLFNBQVAsTUFBc0IsWUFBdEI7QUFDQSxTQUFTQyxJQUFULFFBQXFCLGNBQXJCO0FBQ0EsT0FBT0MsS0FBUCxNQUFrQixTQUFsQjs7SUFFcUJDLFU7OztBQW9CbkIsc0JBQVlDLEtBQVosRUFBbUJDLE9BQW5CLEVBQTRCO0FBQUE7O0FBQUEsd0hBQ3BCRCxLQURvQixFQUNiQyxPQURhOztBQUFBLFVBUTVCQyxZQVI0QixHQVFiLGlCQUFTO0FBQ3RCLFlBQUtDLFFBQUwsQ0FBYztBQUNaQyxrQkFBVUM7QUFERSxPQUFkO0FBR0EsWUFBS0wsS0FBTCxDQUFXTSxRQUFYLENBQW9CRCxLQUFwQjtBQUNELEtBYjJCOztBQUcxQixVQUFLRSxLQUFMLEdBQWE7QUFDWEgsZ0JBQVUsQ0FBQ0osTUFBTVEsS0FBTixDQUFZQyxJQUFaLENBQWlCO0FBQUEsZUFBUUMsS0FBS0MsaUJBQWI7QUFBQSxPQUFqQixLQUFvRCxFQUFyRCxFQUF5RE47QUFEeEQsS0FBYjtBQUgwQjtBQU0zQjs7Ozs2QkFTUTtBQUFBOztBQUFBLG1CQUNzQyxLQUFLTCxLQUQzQztBQUFBLFVBQ0NZLEtBREQsVUFDQ0EsS0FERDtBQUFBLFVBQ1FKLEtBRFIsVUFDUUEsS0FEUjtBQUFBLFVBQ2VGLFFBRGYsVUFDZUEsUUFEZjtBQUFBLFVBQzRCTixLQUQ1Qjs7QUFBQSxVQUVDSSxRQUZELEdBRWMsS0FBS0csS0FGbkIsQ0FFQ0gsUUFGRDs7O0FBSVAsYUFDRTtBQUFDLFlBQUQ7QUFBQSxtQkFBTSxNQUFLLE9BQVgsRUFBbUIsY0FBWVEsS0FBL0IsSUFBMENaLEtBQTFDO0FBQ0dRLGNBQU1LLEdBQU4sQ0FBVTtBQUFBLGlCQUNULG9CQUFDLEtBQUQ7QUFDRSxpQkFBS0gsS0FBS0wsS0FEWjtBQUVFLGtCQUFNSyxLQUFLSSxJQUZiO0FBR0UsbUJBQU9KLEtBQUtMLEtBSGQ7QUFJRSxtQkFBT0ssS0FBS0UsS0FKZDtBQUtFLHFCQUFTUixhQUFhTSxLQUFLTCxLQUw3QjtBQU1FLHNCQUFVSyxLQUFLSyxVQU5qQjtBQU9FLHNCQUFVO0FBQUEscUJBQU0sT0FBS2IsWUFBTCxDQUFrQlEsS0FBS0wsS0FBdkIsQ0FBTjtBQUFBO0FBUFosWUFEUztBQUFBLFNBQVY7QUFESCxPQURGO0FBZUQ7Ozs7RUF0RHFDVixhOztBQUFuQkksVSxDQUNaaUIsUyxnQkFDRm5CLEtBQUttQixTO0FBQ1JKLFNBQU9oQixVQUFVcUIsTTtBQUNqQlgsWUFBVVYsVUFBVXNCLEk7QUFDcEJWLFNBQU9aLFVBQVV1QixPQUFWLENBQ0x2QixVQUFVd0IsS0FBVixDQUFnQjtBQUNkTixVQUFNbEIsVUFBVXFCLE1BREY7QUFFZFosV0FBT1QsVUFBVXFCLE1BRkg7QUFHZEwsV0FBT2hCLFVBQVV5QixJQUhIO0FBSWROLGdCQUFZbkIsVUFBVTBCLElBSlI7QUFLZFgsdUJBQW1CZixVQUFVMEI7QUFMZixHQUFoQixDQURLLEVBUUxDOztBQWJleEIsVSxDQWdCWnlCLFksR0FBZTtBQUNwQmhCLFNBQU87QUFEYSxDO2VBaEJIVCxVIiwiZmlsZSI6IlJhZGlvR3JvdXAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgUHVyZUNvbXBvbmVudCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJ1xuaW1wb3J0IHsgUGFuZSB9IGZyb20gJy4uLy4uL2xheWVycydcbmltcG9ydCBSYWRpbyBmcm9tICcuL1JhZGlvJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSYWRpb0dyb3VwIGV4dGVuZHMgUHVyZUNvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLi4uUGFuZS5wcm9wVHlwZXMsXG4gICAgbGFiZWw6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgb25DaGFuZ2U6IFByb3BUeXBlcy5mdW5jLFxuICAgIGl0ZW1zOiBQcm9wVHlwZXMuYXJyYXlPZihcbiAgICAgIFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICAgIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgICAgIHZhbHVlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgICAgICBsYWJlbDogUHJvcFR5cGVzLm5vZGUsXG4gICAgICAgIGlzRGlzYWJsZWQ6IFByb3BUeXBlcy5ib29sLFxuICAgICAgICBpc0RlZmF1bHRTZWxlY3RlZDogUHJvcFR5cGVzLmJvb2xcbiAgICAgIH0pXG4gICAgKS5pc1JlcXVpcmVkXG4gIH1cblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIGl0ZW1zOiBbXVxuICB9XG5cbiAgY29uc3RydWN0b3IocHJvcHMsIGNvbnRleHQpIHtcbiAgICBzdXBlcihwcm9wcywgY29udGV4dClcblxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBzZWxlY3RlZDogKHByb3BzLml0ZW1zLmZpbmQoaXRlbSA9PiBpdGVtLmlzRGVmYXVsdFNlbGVjdGVkKSB8fCB7fSkudmFsdWVcbiAgICB9XG4gIH1cblxuICBoYW5kbGVDaGFuZ2UgPSB2YWx1ZSA9PiB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBzZWxlY3RlZDogdmFsdWVcbiAgICB9KVxuICAgIHRoaXMucHJvcHMub25DaGFuZ2UodmFsdWUpXG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBsYWJlbCwgaXRlbXMsIG9uQ2hhbmdlLCAuLi5wcm9wcyB9ID0gdGhpcy5wcm9wc1xuICAgIGNvbnN0IHsgc2VsZWN0ZWQgfSA9IHRoaXMuc3RhdGVcblxuICAgIHJldHVybiAoXG4gICAgICA8UGFuZSByb2xlPVwiZ3JvdXBcIiBhcmlhLWxhYmVsPXtsYWJlbH0gey4uLnByb3BzfT5cbiAgICAgICAge2l0ZW1zLm1hcChpdGVtID0+IChcbiAgICAgICAgICA8UmFkaW9cbiAgICAgICAgICAgIGtleT17aXRlbS52YWx1ZX1cbiAgICAgICAgICAgIG5hbWU9e2l0ZW0ubmFtZX1cbiAgICAgICAgICAgIHZhbHVlPXtpdGVtLnZhbHVlfVxuICAgICAgICAgICAgbGFiZWw9e2l0ZW0ubGFiZWx9XG4gICAgICAgICAgICBjaGVja2VkPXtzZWxlY3RlZCA9PT0gaXRlbS52YWx1ZX1cbiAgICAgICAgICAgIGRpc2FibGVkPXtpdGVtLmlzRGlzYWJsZWR9XG4gICAgICAgICAgICBvbkNoYW5nZT17KCkgPT4gdGhpcy5oYW5kbGVDaGFuZ2UoaXRlbS52YWx1ZSl9XG4gICAgICAgICAgLz5cbiAgICAgICAgKSl9XG4gICAgICA8L1BhbmU+XG4gICAgKVxuICB9XG59XG4iXX0=