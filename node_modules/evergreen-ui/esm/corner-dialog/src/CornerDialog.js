var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import { css } from 'ui-box';
import Transition from 'react-transition-group/Transition';
import { Pane } from '../../layers';
import { Portal } from '../../portal';
import { Heading } from '../../typography';
import { IconButton } from '../../buttons';

var animationEasing = {
  deceleration: 'cubic-bezier(0.0, 0.0, 0.2, 1)',
  acceleration: 'cubic-bezier(0.4, 0.0, 1, 1)',
  spring: 'cubic-bezier(0.175, 0.885, 0.320, 1.175)'
};

var ANIMATION_DURATION = 240;

var openAnimation = css.keyframes('openAnimation', {
  from: {
    transform: 'translateY(100%)'
  },
  to: {
    transform: 'translateY(0)'
  }
});

var closeAnimation = css.keyframes('closeAnimation', {
  from: {
    transform: 'scale(1)',
    opacity: 1
  },
  to: {
    transform: 'scale(0.9)',
    opacity: 0
  }
});

var animationStyles = {
  '&[data-state="entering"], &[data-state="entered"]': {
    animation: openAnimation + ' ' + ANIMATION_DURATION + 'ms ' + animationEasing.spring + ' both'
  },
  '&[data-state="exiting"]': {
    animation: closeAnimation + ' 120ms ' + animationEasing.acceleration + ' both'
  }
};

var CornerDialog = function (_PureComponent) {
  _inherits(CornerDialog, _PureComponent);

  function CornerDialog() {
    _classCallCheck(this, CornerDialog);

    var _this = _possibleConstructorReturn(this, (CornerDialog.__proto__ || Object.getPrototypeOf(CornerDialog)).call(this));

    _this.handleHidden = function () {
      _this.setState({ exiting: false });
      _this.props.onHide();

      if (_this.props.onExited) {
        var _this$props;

        (_this$props = _this.props).onExited.apply(_this$props, arguments);
      }
    };

    _this.handleClose = function () {
      _this.setState({ exiting: true });
      _this.props.onHide();
    };

    _this.state = {
      exiting: false
    };
    return _this;
  }

  _createClass(CornerDialog, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          children = _props.children,
          width = _props.width,
          height = _props.height,
          hasCloseIcon = _props.hasCloseIcon,
          containerProps = _props.containerProps,
          isShown = _props.isShown,
          title = _props.title,
          onExit = _props.onExit,
          onExiting = _props.onExiting,
          onEnter = _props.onEnter,
          onEntering = _props.onEntering,
          onEntered = _props.onEntered;
      var exiting = this.state.exiting;


      return React.createElement(
        Portal,
        null,
        React.createElement(
          Transition,
          {
            appear: true,
            unmountOnExit: true,
            timeout: ANIMATION_DURATION,
            'in': isShown && !exiting,
            onExit: onExit,
            onExiting: onExiting,
            onExited: this.handleHidden,
            onEnter: onEnter,
            onEntering: onEntering,
            onEntered: onEntered
          },
          function (state) {
            return React.createElement(
              Pane,
              _extends({
                role: 'dialog',
                backgroundColor: 'white',
                elevation: 4,
                borderRadius: 8,
                width: width,
                height: height,
                css: animationStyles,
                'data-state': state,
                position: 'fixed',
                bottom: 8,
                right: 8
              }, containerProps),
              React.createElement(
                Pane,
                {
                  padding: 8,
                  borderBottom: 'extraMuted',
                  display: 'flex',
                  alignItems: 'center'
                },
                React.createElement(
                  Heading,
                  { is: 'h4', size: 500, flex: '1' },
                  title
                ),
                hasCloseIcon && React.createElement(IconButton, {
                  height: 24,
                  icon: 'close',
                  appearance: 'ghost',
                  onClick: _this2.handleClose
                })
              ),
              React.createElement(
                Pane,
                { overflowY: 'auto', 'data-state': state, padding: 8 },
                typeof children === 'function' ? children({
                  close: close
                }) : children
              )
            );
          }
        )
      );
    }
  }]);

  return CornerDialog;
}(PureComponent);

CornerDialog.propTypes = {
  title: PropTypes.node,
  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  isShown: PropTypes.bool,
  children: PropTypes.node,
  hasCloseIcon: PropTypes.bool,
  containerProps: PropTypes.object,

  onHide: PropTypes.func,
  onExit: PropTypes.func,
  onExiting: PropTypes.func,
  onExited: PropTypes.func,
  onEnter: PropTypes.func,
  onEntering: PropTypes.func,
  onEntered: PropTypes.func
};
CornerDialog.defaultProps = {
  onHide: function onHide() {},
  width: 320,
  height: 176,
  hasCloseIcon: true
};
export default CornerDialog;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,