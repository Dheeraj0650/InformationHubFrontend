var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import { IconButton } from '../../buttons';
import { Pane } from '../../layers';
import { Heading } from '../../typography';
import OptionsList from './OptionsList';
import OptionShapePropType from './OptionShapePropType';

var SelectMenuContent = function (_PureComponent) {
  _inherits(SelectMenuContent, _PureComponent);

  function SelectMenuContent(props, context) {
    _classCallCheck(this, SelectMenuContent);

    var _this = _possibleConstructorReturn(this, (SelectMenuContent.__proto__ || Object.getPrototypeOf(SelectMenuContent)).call(this, props, context));

    _this.handleKeyUp = function (e) {
      if (e.keyCode === 38) {
        _this.handleArrowUp();
      }

      if (e.keyCode === 40) {
        _this.handleArrowDown();
      }

      if (e.keyCode === 13) {
        _this.handleEnter();
      }
    };

    _this.state = {};
    return _this;
  }

  _createClass(SelectMenuContent, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      window.addEventListener('keyup', this.handleKeyUp);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      window.removeEventListener('keyup', this.handleKeyUp);
    }
  }, {
    key: 'getCurrentIndex',
    value: function getCurrentIndex() {
      var _props = this.props,
          options = _props.options,
          listProps = _props.listProps;
      var selected = listProps.selected;


      return options.findIndex(function (option) {
        return option.value === selected[0];
      });
    }
  }, {
    key: 'handleArrowUp',
    value: function handleArrowUp() {
      var _props2 = this.props,
          options = _props2.options,
          listProps = _props2.listProps;
      var onSelect = listProps.onSelect;


      var nextIndex = this.getCurrentIndex() - 1;

      if (nextIndex < 0) {
        nextIndex = options.length - 1;
      }

      onSelect(options[nextIndex]);
    }
  }, {
    key: 'handleArrowDown',
    value: function handleArrowDown() {
      var _props3 = this.props,
          options = _props3.options,
          listProps = _props3.listProps;
      var onSelect = listProps.onSelect;


      var nextIndex = this.getCurrentIndex() + 1;

      if (nextIndex === options.length) {
        nextIndex = 0;
      }

      onSelect(options[nextIndex]);
    }
  }, {
    key: 'handleEnter',
    value: function handleEnter() {
      var isSelected = this.getCurrentIndex() === -1;

      if (isSelected) {
        this.props.close();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props4 = this.props,
          width = _props4.width,
          height = _props4.height,
          options = _props4.options,
          hasTitle = _props4.hasTitle,
          hasFilter = _props4.hasFilter,
          close = _props4.close,
          title = _props4.title,
          listProps = _props4.listProps;


      var headerHeight = 40;
      var optionsListHeight = hasTitle ? height - headerHeight : height;

      return React.createElement(
        Pane,
        { width: width, height: height, display: 'flex', flexDirection: 'column' },
        hasTitle && React.createElement(
          Pane,
          {
            display: 'flex',
            alignItems: 'center',
            borderBottom: 'muted',
            padding: 8,
            height: headerHeight,
            boxSizing: 'border-box'
          },
          React.createElement(
            Pane,
            { flex: '1' },
            React.createElement(
              Heading,
              { size: 400 },
              title
            )
          ),
          React.createElement(IconButton, {
            icon: 'close',
            appearance: 'ghost',
            height: 24,
            onClick: close
          })
        ),
        React.createElement(OptionsList, _extends({
          height: optionsListHeight,
          hasFilter: hasFilter,
          options: options
        }, listProps))
      );
    }
  }]);

  return SelectMenuContent;
}(PureComponent);

SelectMenuContent.propTypes = {
  close: PropTypes.func,
  title: PropTypes.string,
  width: PropTypes.number,
  height: PropTypes.number,
  options: PropTypes.arrayOf(OptionShapePropType),
  hasTitle: PropTypes.bool,
  hasFilter: PropTypes.bool,
  listProps: PropTypes.shape(OptionsList.propTypes)
};
SelectMenuContent.defaultProps = {
  options: [],
  hasTitle: true,
  hasFilter: true
};
export default SelectMenuContent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,