'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _positioner = require('../../positioner');

var _PopoverStateless = require('./PopoverStateless');

var _PopoverStateless2 = _interopRequireDefault(_PopoverStateless);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Popover = function (_Component) {
  _inherits(Popover, _Component);

  function Popover() {
    _classCallCheck(this, Popover);

    var _this = _possibleConstructorReturn(this, (Popover.__proto__ || Object.getPrototypeOf(Popover)).call(this));

    _this.onBodyClick = function (e) {
      // Ignore clicks on the popover or button
      if (_this.targetNode === e.target) {
        return;
      }

      if (_this.popoverNode && (_this.popoverNode === e.target || _this.popoverNode.contains(e.target))) {
        return;
      }

      _this.close();
    };

    _this.onResize = function () {
      _this.close();
    };

    _this.onEsc = function (e) {
      // Esc key
      if (e.keyCode === 27) {
        _this.close();
      }
    };

    _this.getRef = function (ref) {
      _this.targetNode = ref;
    };

    _this.getTargetRect = function () {
      return _this.targetNode.getBoundingClientRect();
    };

    _this.toggle = function () {
      var isOpen = !_this.state.isOpen;

      if (isOpen) {
        _this.open();
      } else {
        _this.close();
      }

      _this.setState({ isOpen: isOpen });
    };

    _this.open = function () {
      if (_this.state.isOpen) {
        return;
      }

      _this.setState({ isOpen: true, targetRect: _this.getTargetRect() });
      document.body.addEventListener('click', _this.onBodyClick, false);
      document.body.addEventListener('keydown', _this.onEsc, false);
      window.addEventListener('resize', _this.onResize, false);

      _this.props.onOpen();
    };

    _this.close = function () {
      if (!_this.state.isOpen) {
        return;
      }

      _this.setState({ isOpen: false });
      document.body.removeEventListener('click', _this.onBodyClick, false);
      document.body.removeEventListener('keydown', _this.onEsc, false);
      window.removeEventListener('resize', _this.resize, false);

      _this.props.onClose();
    };

    _this.state = {
      isOpen: false,
      targetRect: {}
    };
    return _this;
  }

  _createClass(Popover, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (Object.prototype.hasOwnProperty.call(nextProps, 'isOpen')) {
        if (nextProps.isOpen) {
          this.setState({
            targetRect: this.getTargetRect()
          });
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      document.body.removeEventListener('click', this.onBodyClick, false);
      document.body.removeEventListener('keydown', this.onEsc, false);
      window.removeEventListener('resize', this.resize, false);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          zIndex = _props.zIndex,
          isOpen = _props.isOpen,
          content = _props.content,
          display = _props.display,
          children = _props.children,
          minWidth = _props.minWidth,
          minHeight = _props.minHeight,
          statelessProps = _props.statelessProps,
          props = _objectWithoutProperties(_props, ['zIndex', 'isOpen', 'content', 'display', 'children', 'minWidth', 'minHeight', 'statelessProps']);

      var _state = this.state,
          stateIsOpen = _state.isOpen,
          targetRect = _state.targetRect;


      var open = isOpen || stateIsOpen;

      return [typeof children === 'function' ? children({
        targetRect: targetRect,
        toggle: this.toggle,
        getRef: this.getRef,
        isOpen: open,
        key: 'popover-child'
      }) : _react2.default.cloneElement(children, _extends({
        onClick: function onClick() {
          return _this2.toggle();
        },
        innerRef: function innerRef(ref) {
          _this2.getRef(ref);
        }
      }, open ? { 'data-popover-opened': true } : {}, {
        key: 'popover-child'
      })), _react2.default.createElement(
        _positioner.Positioner,
        _extends({
          key: 'popover-positioner',
          targetRect: targetRect,
          zIndex: zIndex,
          isShown: open
        }, props),
        function (_ref) {
          var css = _ref.css,
              style = _ref.style,
              state = _ref.state,
              getRef = _ref.getRef;
          return _react2.default.createElement(
            _PopoverStateless2.default,
            _extends({
              innerRef: function innerRef(ref) {
                _this2.popoverNode = ref;
                getRef(ref);
              },
              'data-state': state,
              css: css,
              style: style,
              display: display,
              minWidth: minWidth,
              minHeight: minHeight
            }, statelessProps),
            typeof content === 'function' ? content({ targetRect: targetRect, close: _this2.close }) : content
          );
        }
      )];
    }
  }]);

  return Popover;
}(_react.Component);

Popover.propTypes = _extends({}, _positioner.Positioner.propTypes, {
  onOpen: _propTypes2.default.func.isRequired,
  // Use isOpen to manually control the Popover
  isOpen: _propTypes2.default.bool,
  onClose: _propTypes2.default.func.isRequired,
  content: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func]).isRequired,
  children: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.func]).isRequired,
  display: _propTypes2.default.string,
  minWidth: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
  minHeight: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
  statelessProps: _propTypes2.default.objectOf(_PopoverStateless2.default.propTypes)
});
Popover.defaultProps = {
  side: 'bottom',
  onOpen: function onOpen() {},
  onClose: function onClose() {},
  minWidth: 200,
  minHeight: 40
};
exports.default = Popover;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,