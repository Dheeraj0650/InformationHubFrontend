'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _fuzzaldrinPlus = require('fuzzaldrin-plus');

var _fuzzaldrinPlus2 = _interopRequireDefault(_fuzzaldrinPlus);

var _downshift = require('downshift');

var _downshift2 = _interopRequireDefault(_downshift);

var _reactTinyVirtualList = require('react-tiny-virtual-list');

var _reactTinyVirtualList2 = _interopRequireDefault(_reactTinyVirtualList);

var _popover = require('../../popover');

var _typography = require('../../typography');

var _layers = require('../../layers');

var _AutocompleteItem = require('./AutocompleteItem');

var _AutocompleteItem2 = _interopRequireDefault(_AutocompleteItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var fuzzyFilter = function fuzzyFilter(items, input) {
  return _fuzzaldrinPlus2.default.filter(items, input);
};

var autocompleteItemRenderer = function autocompleteItemRenderer(props) {
  return _react2.default.createElement(_AutocompleteItem2.default, props);
};

// https://github.com/paypal/downshift/issues/164

var Autocomplete = function (_PureComponent) {
  _inherits(Autocomplete, _PureComponent);

  function Autocomplete() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Autocomplete);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Autocomplete.__proto__ || Object.getPrototypeOf(Autocomplete)).call.apply(_ref, [this].concat(args))), _this), _this.renderResults = function (_ref2) {
      var width = _ref2.width,
          inputValue = _ref2.inputValue,
          highlightedIndex = _ref2.highlightedIndex,
          selectItemAtIndex = _ref2.selectItemAtIndex,
          selectedItem = _ref2.selectedItem,
          getItemProps = _ref2.getItemProps;
      var _this$props = _this.props,
          title = _this$props.title,
          itemSize = _this$props.itemSize,
          itemsFilter = _this$props.itemsFilter,
          originalItems = _this$props.items,
          itemToString = _this$props.itemToString,
          _renderItem = _this$props.renderItem,
          popoverMaxHeight = _this$props.popoverMaxHeight,
          isFilterDisabled = _this$props.isFilterDisabled;


      var items = isFilterDisabled || inputValue.trim() === '' ? originalItems : itemsFilter(originalItems, inputValue);

      if (items.length === 0) return null;

      return _react2.default.createElement(
        _layers.Pane,
        { width: width },
        title && _react2.default.createElement(
          _layers.Pane,
          { padding: 8, borderBottom: 'extraMuted' },
          _react2.default.createElement(
            _typography.Text,
            { size: 200, color: 'muted', isUppercase: true },
            title
          )
        ),
        items.length > 0 && _react2.default.createElement(_reactTinyVirtualList2.default, {
          width: '100%',
          height: Math.min(items.length * itemSize, popoverMaxHeight),
          itemSize: itemSize,
          itemCount: items.length,
          scrollToIndex: highlightedIndex || 0,
          overscanCount: 3,
          scrollToAlignment: 'auto',
          renderItem: function renderItem(_ref3) {
            var index = _ref3.index,
                style = _ref3.style;

            var item = items[index];
            var itemString = itemToString(item);
            return _renderItem(getItemProps({
              item: item,
              key: itemString,
              index: index,
              style: style,
              children: itemString,
              onMouseUp: function onMouseUp() {
                selectItemAtIndex(index);
              },
              isSelected: selectedItem === item,
              isHighlighted: highlightedIndex === index
            }));
          }
        })
      );
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Autocomplete, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          children = _props.children,
          itemSize = _props.itemSize,
          renderItem = _props.renderItem,
          itemsFilter = _props.itemsFilter,
          popoverMaxHeight = _props.popoverMaxHeight,
          useSmartPositioning = _props.useSmartPositioning,
          popoverMinWidth = _props.popoverMinWidth,
          props = _objectWithoutProperties(_props, ['children', 'itemSize', 'renderItem', 'itemsFilter', 'popoverMaxHeight', 'useSmartPositioning', 'popoverMinWidth']);

      return _react2.default.createElement(
        _downshift2.default,
        props,
        function (_ref4) {
          var isOpen = _ref4.isOpen,
              inputValue = _ref4.inputValue,
              getItemProps = _ref4.getItemProps,
              selectedItem = _ref4.selectedItem,
              highlightedIndex = _ref4.highlightedIndex,
              selectItemAtIndex = _ref4.selectItemAtIndex,
              restDownshiftProps = _objectWithoutProperties(_ref4, ['isOpen', 'inputValue', 'getItemProps', 'selectedItem', 'highlightedIndex', 'selectItemAtIndex']);

          return _react2.default.createElement(
            'div',
            null,
            _react2.default.createElement(
              _popover.Popover,
              {
                isOpen: isOpen,
                minWidth: popoverMinWidth,
                content: function content(_ref5) {
                  var targetRect = _ref5.targetRect;
                  return _this2.renderResults({
                    width: Math.max(targetRect.width, popoverMinWidth),
                    inputValue: inputValue,
                    getItemProps: getItemProps,
                    selectedItem: selectedItem,
                    highlightedIndex: highlightedIndex,
                    selectItemAtIndex: selectItemAtIndex
                  });
                },
                minHeight: 0,
                animationDuration: 0,
                useSmartPositioning: useSmartPositioning
              },
              function (_ref6) {
                var isOpenPopover = _ref6.isOpen,
                    toggle = _ref6.toggle,
                    getRef = _ref6.getRef,
                    key = _ref6.key;
                return children(_extends({
                  key: key,
                  isOpen: isOpenPopover,
                  toggle: toggle,
                  getRef: getRef,
                  inputValue: inputValue,
                  selectedItem: selectedItem,
                  highlightedIndex: highlightedIndex,
                  selectItemAtIndex: selectItemAtIndex
                }, restDownshiftProps));
              }
            )
          );
        }
      );
    }
  }]);

  return Autocomplete;
}(_react.PureComponent);

Autocomplete.propTypes = _extends({
  title: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.node]),
  items: _propTypes2.default.array.isRequired,
  selectedItem: _propTypes2.default.any,
  defaultSelectedItem: _propTypes2.default.any,
  itemToString: _propTypes2.default.func.isRequired,
  children: _propTypes2.default.func.isRequired,
  itemSize: _propTypes2.default.number,
  renderItem: _propTypes2.default.func,
  itemsFilter: _propTypes2.default.func,
  isFilterDisabled: _propTypes2.default.bool,
  popoverMinWidth: _propTypes2.default.number,
  popoverMaxHeight: _propTypes2.default.number,
  useSmartPositioning: _propTypes2.default.bool
}, _downshift2.default.propTypes);
Autocomplete.defaultProps = {
  itemToString: function itemToString(i) {
    return i ? String(i) : '';
  },
  itemSize: 32,
  itemsFilter: fuzzyFilter,
  isFilterDisabled: false,
  popoverMinWidth: 200,
  popoverMaxHeight: 240,
  useSmartPositioning: false,
  renderItem: autocompleteItemRenderer
};
exports.default = Autocomplete;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,